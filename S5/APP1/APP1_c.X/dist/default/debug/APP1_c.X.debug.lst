

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 09 15:46:36 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     	FNCALL	_main,_c_touch
   448                           	FNCALL	_main,_d_touch
   449                           	FNCALL	_main,_f_touch
   450                           	FNCALL	_main,_init
   451                           	FNCALL	_init,_inite_UART
   452                           	FNCALL	_inite_UART,_SetupClock
   453                           	FNCALL	_f_touch,_closeADC
   454                           	FNCALL	_f_touch,_set_LED_ready
   455                           	FNCALL	_d_touch,_configureADC
   456                           	FNCALL	_d_touch,_set_LED_ready
   457                           	FNCALL	_c_touch,_get_adc_value
   458                           	FNCALL	_c_touch,_send_volt_value
   459                           	FNROOT	_main
   460                           	FNCALL	_Serial_interrupt,_check
   461                           	FNCALL	_check,_write_7seg
   462                           	FNCALL	intlevel2,_Serial_interrupt
   463                           	global	intlevel2
   464                           	FNROOT	intlevel2
   465                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   466                           global __pidataCOMRAM
   467                           __pidataCOMRAM:
   468  000256                     	file	"main_app.c"
   469                           	line	28
   470                           
   471                           ;initializer for _MsgFromPIC
   472                           	db	low(0Dh)
   473  000256  0D                 	db	low(0Ah)
   474  000257  0A                 	db	low(059h)
   475  000258  59                 	db	low(06Fh)
   476  000259  6F                 	db	low(075h)
   477  00025A  75                 	db	low(020h)
   478  00025B  20                 	db	low(074h)
   479  00025C  74                 	db	low(079h)
   480  00025D  79                 	db	low(070h)
   481  00025E  70                 	db	low(065h)
   482  00025F  65                 	db	low(064h)
   483  000260  64                 	db	low(020h)
   484  000261  20                 	db	low(03Ah)
   485  000262  3A                 	db	low(0)
   486  000263  00                 	line	25
   487                           
   488                           ;initializer for _sec_input
   489                           	db	low(063h)
   490  000264  63                 	line	24
   491                           
   492                           ;initializer for _input
   493                           	db	low(064h)
   494  000265  64                 	global	_sys_state
   495                           	global	_out
   496                           	global	_adc_value
   497                           	global	_PORTDbits
   498                           _PORTDbits	set	0xF83
   499  0000                     	global	_TRISDbits
   500                           _TRISDbits	set	0xF95
   501  0000                     	global	_LATCbits
   502                           _LATCbits	set	0xF8B
   503  0000                     	global	_LATD
   504                           _LATD	set	0xF8C
   505  0000                     	global	_PORTCbits
   506                           _PORTCbits	set	0xF82
   507  0000                     	global	_TRISCbits
   508                           _TRISCbits	set	0xF94
   509  0000                     	global	_TXREG
   510                           _TXREG	set	0xFAD
   511  0000                     	global	_ADRESH
   512                           _ADRESH	set	0xFC4
   513  0000                     	global	_ADCON2bits
   514                           _ADCON2bits	set	0xFC0
   515  0000                     	global	_ADCON0bits
   516                           _ADCON0bits	set	0xFC2
   517  0000                     	global	_ADCON1bits
   518                           _ADCON1bits	set	0xFC1
   519  0000                     	global	_RCREG
   520                           _RCREG	set	0xFAE
   521  0000                     	global	_PIE1bits
   522                           _PIE1bits	set	0xF9D
   523  0000                     	global	_RCSTAbits
   524                           _RCSTAbits	set	0xFAB
   525  0000                     	global	_TXSTAbits
   526                           _TXSTAbits	set	0xFAC
   527  0000                     	global	_BAUDCONbits
   528                           _BAUDCONbits	set	0xFB8
   529  0000                     	global	_SPBRG
   530                           _SPBRG	set	0xFAF
   531  0000                     	global	_OSCCONbits
   532                           _OSCCONbits	set	0xFD3
   533  0000                     	global	_TXIF
   534                           _TXIF	set	0x7CF4
   535  0000                     	global	_RCIF
   536                           _RCIF	set	0x7CF5
   537  0000                     	global	_CREN
   538                           _CREN	set	0x7D5C
   539  0000                     	global	_T0CONbits
   540                           _T0CONbits	set	0xFD5
   541  0000                     	global	_T0CON
   542                           _T0CON	set	0xFD5
   543  0000                     	global	_TMR0H
   544                           _TMR0H	set	0xFD7
   545  0000                     	global	_TMR0L
   546                           _TMR0L	set	0xFD6
   547  0000                     	global	_INTCONbits
   548                           _INTCONbits	set	0xFF2
   549  0000                     ; #config settings
   550                           global __CFG_PLLDIV$5
   551                           __CFG_PLLDIV$5 equ 0x0
   552  0000                     global __CFG_CPUDIV$OSC2_PLL3
   553                           __CFG_CPUDIV$OSC2_PLL3 equ 0x0
   554  0000                     global __CFG_USBDIV$1
   555                           __CFG_USBDIV$1 equ 0x0
   556  0000                     global __CFG_FOSC$HS
   557                           __CFG_FOSC$HS equ 0x0
   558  0000                     global __CFG_FCMEN$OFF
   559                           __CFG_FCMEN$OFF equ 0x0
   560  0000                     global __CFG_IESO$OFF
   561                           __CFG_IESO$OFF equ 0x0
   562  0000                     global __CFG_PWRT$OFF
   563                           __CFG_PWRT$OFF equ 0x0
   564  0000                     global __CFG_BOR$OFF
   565                           __CFG_BOR$OFF equ 0x0
   566  0000                     global __CFG_BORV$3
   567                           __CFG_BORV$3 equ 0x0
   568  0000                     global __CFG_VREGEN$OFF
   569                           __CFG_VREGEN$OFF equ 0x0
   570  0000                     global __CFG_WDT$OFF
   571                           __CFG_WDT$OFF equ 0x0
   572  0000                     global __CFG_WDTPS$32768
   573                           __CFG_WDTPS$32768 equ 0x0
   574  0000                     global __CFG_CCP2MX$ON
   575                           __CFG_CCP2MX$ON equ 0x0
   576  0000                     global __CFG_PBADEN$OFF
   577                           __CFG_PBADEN$OFF equ 0x0
   578  0000                     global __CFG_LPT1OSC$OFF
   579                           __CFG_LPT1OSC$OFF equ 0x0
   580  0000                     global __CFG_MCLRE$ON
   581                           __CFG_MCLRE$ON equ 0x0
   582  0000                     global __CFG_STVREN$ON
   583                           __CFG_STVREN$ON equ 0x0
   584  0000                     global __CFG_LVP$OFF
   585                           __CFG_LVP$OFF equ 0x0
   586  0000                     global __CFG_ICPRT$OFF
   587                           __CFG_ICPRT$OFF equ 0x0
   588  0000                     global __CFG_XINST$OFF
   589                           __CFG_XINST$OFF equ 0x0
   590  0000                     global __CFG_DEBUG$OFF
   591                           __CFG_DEBUG$OFF equ 0x0
   592  0000                     global __CFG_CP0$OFF
   593                           __CFG_CP0$OFF equ 0x0
   594  0000                     global __CFG_CP1$OFF
   595                           __CFG_CP1$OFF equ 0x0
   596  0000                     global __CFG_CP2$OFF
   597                           __CFG_CP2$OFF equ 0x0
   598  0000                     global __CFG_CP3$OFF
   599                           __CFG_CP3$OFF equ 0x0
   600  0000                     global __CFG_CPB$OFF
   601                           __CFG_CPB$OFF equ 0x0
   602  0000                     global __CFG_CPD$OFF
   603                           __CFG_CPD$OFF equ 0x0
   604  0000                     global __CFG_WRT0$OFF
   605                           __CFG_WRT0$OFF equ 0x0
   606  0000                     global __CFG_WRT1$OFF
   607                           __CFG_WRT1$OFF equ 0x0
   608  0000                     global __CFG_WRT2$OFF
   609                           __CFG_WRT2$OFF equ 0x0
   610  0000                     global __CFG_WRT3$OFF
   611                           __CFG_WRT3$OFF equ 0x0
   612  0000                     global __CFG_WRTC$OFF
   613                           __CFG_WRTC$OFF equ 0x0
   614  0000                     global __CFG_WRTB$OFF
   615                           __CFG_WRTB$OFF equ 0x0
   616  0000                     global __CFG_WRTD$OFF
   617                           __CFG_WRTD$OFF equ 0x0
   618  0000                     global __CFG_EBTR0$OFF
   619                           __CFG_EBTR0$OFF equ 0x0
   620  0000                     global __CFG_EBTR1$OFF
   621                           __CFG_EBTR1$OFF equ 0x0
   622  0000                     global __CFG_EBTR2$OFF
   623                           __CFG_EBTR2$OFF equ 0x0
   624  0000                     global __CFG_EBTR3$OFF
   625                           __CFG_EBTR3$OFF equ 0x0
   626  0000                     global __CFG_EBTRB$OFF
   627                           __CFG_EBTRB$OFF equ 0x0
   628  0000                     	file	"C:\Users\laure\AppData\Local\Temp\sg7s."
   629                           	line	#
   630                           psect	cinit,class=CODE,delta=1,reloc=2
   631                           global __pcinit
   632                           __pcinit:
   633  00014E                     global start_initialization
   634                           start_initialization:
   635  00014E                     
   636                           global __initialization
   637                           __initialization:
   638  00014E                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   639                           global __pbssCOMRAM
   640                           __pbssCOMRAM:
   641  000011                     	global	_i
   642                           	global	_i
   643                           _i:
   644  000011                            ds      2
   645  000011                     	global	_sys_state
   646                           _sys_state:
   647  000013                            ds      1
   648  000013                     	global	_out
   649                           _out:
   650  000014                            ds      1
   651  000014                     	global	_baud
   652                           	global	_baud
   653                           _baud:
   654  000015                            ds      1
   655  000015                     	global	_UART1Config
   656                           	global	_UART1Config
   657                           _UART1Config:
   658  000016                            ds      1
   659  000016                     	global	_temp
   660                           	global	_temp
   661                           _temp:
   662  000017                            ds      1
   663  000017                     	global	_adc_value
   664                           _adc_value:
   665  000018                            ds      1
   666  000018                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   667                           global __pdataCOMRAM
   668                           __pdataCOMRAM:
   669  000001                     	file	"main_app.c"
   670                           	line	28
   671                           	global	_MsgFromPIC
   672                           	global	_MsgFromPIC
   673                           _MsgFromPIC:
   674  000001                            ds      14
   675  000001                     psect	dataCOMRAM
   676                           	file	"main_app.c"
   677                           	line	25
   678                           	global	_sec_input
   679                           	global	_sec_input
   680                           _sec_input:
   681  00000F                            ds      1
   682  00000F                     psect	dataCOMRAM
   683                           	file	"main_app.c"
   684                           	line	24
   685                           	global	_input
   686                           	global	_input
   687                           _input:
   688  000010                            ds      1
   689  000010                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
   690                           global __pbssBANK1
   691                           __pbssBANK1:
   692  000100                     	global	_MessageBuffer
   693                           	global	_MessageBuffer
   694                           _MessageBuffer:
   695  000100                            ds      200
   696  000100                     	file	"C:\Users\laure\AppData\Local\Temp\sg7s."
   697                           	line	#
   698                           psect	cinit
   699                           ; Initialize objects allocated to COMRAM (16 bytes)
   700                           	global __pidataCOMRAM
   701                           	; load TBLPTR registers with __pidataCOMRAM
   702                           	movlw	low (__pidataCOMRAM)
   703  00014E  0E56               	movwf	tblptrl
   704  000150  6EF6               	movlw	high(__pidataCOMRAM)
   705  000152  0E02               	movwf	tblptrh
   706  000154  6EF7               	movlw	low highword(__pidataCOMRAM)
   707  000156  0E00               	movwf	tblptru
   708  000158  6EF8               	lfsr	0,__pdataCOMRAM
   709  00015A  EE00  F001         	lfsr	1,16
   710  00015E  EE10 F010          	copy_data0:
   711  000162                     	tblrd	*+
   712  000162  0009               	movff	tablat, postinc0
   713  000164  CFF5 FFEE          	movf	postdec1,w
   714  000168  50E5               	movf	fsr1l,w
   715  00016A  50E1               	bnz	copy_data0
   716  00016C  E1FA               	line	#
   717                           ; Clear objects allocated to BANK1 (200 bytes)
   718                           	global __pbssBANK1
   719                           lfsr	0,__pbssBANK1
   720  00016E  EE01  F000         movlw	200
   721  000172  0EC8               clear_0:
   722  000174                     clrf	postinc0,c
   723  000174  6AEE               decf	wreg
   724  000176  06E8               bnz	clear_0
   725  000178  E1FD               ; Clear objects allocated to COMRAM (8 bytes)
   726                           	global __pbssCOMRAM
   727                           lfsr	0,__pbssCOMRAM
   728  00017A  EE00  F011         movlw	8
   729  00017E  0E08               clear_1:
   730  000180                     clrf	postinc0,c
   731  000180  6AEE               decf	wreg
   732  000182  06E8               bnz	clear_1
   733  000184  E1FD               psect cinit,class=CODE,delta=1
   734                           global end_of_initialization,__end_of__initialization
   735                           
   736                           ;End of C runtime variable initialization code
   737                           
   738                           end_of_initialization:
   739  000186                     __end_of__initialization:
   740  000186                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   741  000186  901C               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   742  000188  921C               movlb 0
   743  00018A  0100               goto _main	;jump to C main() function
   744  00018C  EF5E  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   745                           global __pcstackCOMRAM
   746                           __pcstackCOMRAM:
   747  000019                     ?_write_7seg:	; 1 bytes @ 0x0
   748  000019                     ??_write_7seg:	; 1 bytes @ 0x0
   749  000019                     ?_SetupClock:	; 1 bytes @ 0x0
   750  000019                     ?_inite_UART:	; 1 bytes @ 0x0
   751  000019                     ?_check:	; 1 bytes @ 0x0
   752  000019                     ?_Serial_interrupt:	; 1 bytes @ 0x0
   753  000019                     ?_init:	; 1 bytes @ 0x0
   754  000019                     ?_configureADC:	; 1 bytes @ 0x0
   755  000019                     ?_closeADC:	; 1 bytes @ 0x0
   756  000019                     ?_set_LED_ready:	; 1 bytes @ 0x0
   757  000019                     ?_get_adc_value:	; 1 bytes @ 0x0
   758  000019                     ?_send_volt_value:	; 1 bytes @ 0x0
   759  000019                     ?_d_touch:	; 1 bytes @ 0x0
   760  000019                     ?_f_touch:	; 1 bytes @ 0x0
   761  000019                     ?_c_touch:	; 1 bytes @ 0x0
   762  000019                     ?_main:	; 1 bytes @ 0x0
   763  000019                     	global	write_7seg@c
   764                           write_7seg@c:	; 1 bytes @ 0x0
   765  000019                     	ds   1
   766  000019                     ??_check:	; 1 bytes @ 0x1
   767  00001A                     	global	check@input
   768                           check@input:	; 1 bytes @ 0x1
   769  00001A                     	ds   1
   770  00001A                     ??_SetupClock:	; 1 bytes @ 0x2
   771  00001B                     ??_inite_UART:	; 1 bytes @ 0x2
   772  00001B                     ??_Serial_interrupt:	; 1 bytes @ 0x2
   773  00001B                     ??_init:	; 1 bytes @ 0x2
   774  00001B                     ??_configureADC:	; 1 bytes @ 0x2
   775  00001B                     ??_closeADC:	; 1 bytes @ 0x2
   776  00001B                     ??_set_LED_ready:	; 1 bytes @ 0x2
   777  00001B                     ??_get_adc_value:	; 1 bytes @ 0x2
   778  00001B                     ??_send_volt_value:	; 1 bytes @ 0x2
   779  00001B                     	global	set_LED_ready@state
   780                           set_LED_ready@state:	; 1 bytes @ 0x2
   781  00001B                     	global	get_adc_value@digi
   782                           get_adc_value@digi:	; 1 bytes @ 0x2
   783  00001B                     	global	send_volt_value@voltage
   784                           send_volt_value@voltage:	; 1 bytes @ 0x2
   785  00001B                     	ds   1
   786  00001B                     ??_d_touch:	; 1 bytes @ 0x3
   787  00001C                     ??_f_touch:	; 1 bytes @ 0x3
   788  00001C                     ??_c_touch:	; 1 bytes @ 0x3
   789  00001C                     ??_main:	; 1 bytes @ 0x3
   790  00001C                     ;!
   791                           ;!Data Sizes:
   792                           ;!    Strings     0
   793                           ;!    Constant    0
   794                           ;!    Data        16
   795                           ;!    BSS         208
   796                           ;!    Persistent  0
   797                           ;!    Stack       0
   798                           ;!
   799                           ;!Auto Spaces:
   800                           ;!    Space          Size  Autos    Used
   801                           ;!    COMRAM           94      3      27
   802                           ;!    BANK0           160      0       0
   803                           ;!    BANK1           256      0     200
   804                           ;!    BANK2           256      0       0
   805                           ;!    BANK3           244      0       0
   806                           ;!    BANK4           256      0       0
   807                           ;!    BANK5           256      0       0
   808                           ;!    BANK6           256      0       0
   809                           ;!    BANK7           256      0       0
   810                           
   811                           ;!
   812                           ;!Pointer List with Targets:
   813                           ;!
   814                           ;!    None.
   815                           
   816                           
   817                           ;!
   818                           ;!Critical Paths under _main in COMRAM
   819                           ;!
   820                           ;!    _f_touch->_set_LED_ready
   821                           ;!    _d_touch->_set_LED_ready
   822                           ;!    _c_touch->_get_adc_value
   823                           ;!    _c_touch->_send_volt_value
   824                           ;!
   825                           ;!Critical Paths under _Serial_interrupt in COMRAM
   826                           ;!
   827                           ;!    _Serial_interrupt->_check
   828                           ;!    _check->_write_7seg
   829                           ;!
   830                           ;!Critical Paths under _main in BANK0
   831                           ;!
   832                           ;!    None.
   833                           ;!
   834                           ;!Critical Paths under _Serial_interrupt in BANK0
   835                           ;!
   836                           ;!    None.
   837                           ;!
   838                           ;!Critical Paths under _main in BANK1
   839                           ;!
   840                           ;!    None.
   841                           ;!
   842                           ;!Critical Paths under _Serial_interrupt in BANK1
   843                           ;!
   844                           ;!    None.
   845                           ;!
   846                           ;!Critical Paths under _main in BANK2
   847                           ;!
   848                           ;!    None.
   849                           ;!
   850                           ;!Critical Paths under _Serial_interrupt in BANK2
   851                           ;!
   852                           ;!    None.
   853                           ;!
   854                           ;!Critical Paths under _main in BANK3
   855                           ;!
   856                           ;!    None.
   857                           ;!
   858                           ;!Critical Paths under _Serial_interrupt in BANK3
   859                           ;!
   860                           ;!    None.
   861                           ;!
   862                           ;!Critical Paths under _main in BANK4
   863                           ;!
   864                           ;!    None.
   865                           ;!
   866                           ;!Critical Paths under _Serial_interrupt in BANK4
   867                           ;!
   868                           ;!    None.
   869                           ;!
   870                           ;!Critical Paths under _main in BANK5
   871                           ;!
   872                           ;!    None.
   873                           ;!
   874                           ;!Critical Paths under _Serial_interrupt in BANK5
   875                           ;!
   876                           ;!    None.
   877                           ;!
   878                           ;!Critical Paths under _main in BANK6
   879                           ;!
   880                           ;!    None.
   881                           ;!
   882                           ;!Critical Paths under _Serial_interrupt in BANK6
   883                           ;!
   884                           ;!    None.
   885                           ;!
   886                           ;!Critical Paths under _main in BANK7
   887                           ;!
   888                           ;!    None.
   889                           ;!
   890                           ;!Critical Paths under _Serial_interrupt in BANK7
   891                           ;!
   892                           ;!    None.
   893                           
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   896 ;;
   897                           
   898                           ;!
   899                           ;!Call Graph Tables:
   900                           ;!
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   903                           ;! ---------------------------------------------------------------------------------
   904                           ;! (0) _main                                                 0     0      0      60
   905                           ;!                            _c_touch
   906                           ;!                            _d_touch
   907                           ;!                            _f_touch
   908                           ;!                               _init
   909                           ;! ---------------------------------------------------------------------------------
   910                           ;! (1) _init                                                 0     0      0       0
   911                           ;!                         _inite_UART
   912                           ;! ---------------------------------------------------------------------------------
   913                           ;! (2) _inite_UART                                           0     0      0       0
   914                           ;!                         _SetupClock
   915                           ;! ---------------------------------------------------------------------------------
   916                           ;! (3) _SetupClock                                           0     0      0       0
   917                           ;! ---------------------------------------------------------------------------------
   918                           ;! (1) _f_touch                                              0     0      0      15
   919                           ;!                           _closeADC
   920                           ;!                      _set_LED_ready
   921                           ;! ---------------------------------------------------------------------------------
   922                           ;! (2) _closeADC                                             0     0      0       0
   923                           ;! ---------------------------------------------------------------------------------
   924                           ;! (1) _d_touch                                              0     0      0      15
   925                           ;!                       _configureADC
   926                           ;!                      _set_LED_ready
   927                           ;! ---------------------------------------------------------------------------------
   928                           ;! (2) _set_LED_ready                                        1     1      0      15
   929                           ;!                                              2 COMRAM     1     1      0
   930                           ;! ---------------------------------------------------------------------------------
   931                           ;! (2) _configureADC                                         0     0      0       0
   932                           ;! ---------------------------------------------------------------------------------
   933                           ;! (1) _c_touch                                              0     0      0      30
   934                           ;!                      _get_adc_value
   935                           ;!                    _send_volt_value
   936                           ;! ---------------------------------------------------------------------------------
   937                           ;! (2) _send_volt_value                                      1     1      0      15
   938                           ;!                                              2 COMRAM     1     1      0
   939                           ;! ---------------------------------------------------------------------------------
   940                           ;! (2) _get_adc_value                                        1     1      0      15
   941                           ;!                                              2 COMRAM     1     1      0
   942                           ;! ---------------------------------------------------------------------------------
   943                           ;! Estimated maximum stack depth 3
   944                           ;! ---------------------------------------------------------------------------------
   945                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   946                           ;! ---------------------------------------------------------------------------------
   947                           ;! (4) _Serial_interrupt                                     0     0      0      60
   948                           ;!                              _check
   949                           ;! ---------------------------------------------------------------------------------
   950                           ;! (5) _check                                                1     1      0      60
   951                           ;!                                              1 COMRAM     1     1      0
   952                           ;!                         _write_7seg
   953                           ;! ---------------------------------------------------------------------------------
   954                           ;! (6) _write_7seg                                           1     1      0      15
   955                           ;!                                              0 COMRAM     1     1      0
   956                           ;! ---------------------------------------------------------------------------------
   957                           ;! Estimated maximum stack depth 6
   958                           ;! ---------------------------------------------------------------------------------
   959                           ;!
   960                           ;! Call Graph Graphs:
   961                           ;!
   962                           ;! _main (ROOT)
   963                           ;!   _c_touch
   964                           ;!     _get_adc_value
   965                           ;!     _send_volt_value
   966                           ;!   _d_touch
   967                           ;!     _configureADC
   968                           ;!     _set_LED_ready
   969                           ;!   _f_touch
   970                           ;!     _closeADC
   971                           ;!     _set_LED_ready
   972                           ;!   _init
   973                           ;!     _inite_UART
   974                           ;!       _SetupClock
   975                           ;!
   976                           ;! _Serial_interrupt (ROOT)
   977                           ;!   _check
   978                           ;!     _write_7seg
   979                           ;!
   980                           
   981                           ;! Address spaces:
   982                           
   983                           ;!Name               Size   Autos  Total    Cost      Usage
   984                           ;!BIGRAM_1           400      0       0      21        0.0%
   985                           ;!BIGRAM             3F3      0       0      22        0.0%
   986                           ;!EEDATA             100      0       0       0        0.0%
   987                           ;!BITBANK7           100      0       0      19        0.0%
   988                           ;!BANK7              100      0       0      20        0.0%
   989                           ;!BITBANK6           100      0       0      17        0.0%
   990                           ;!BANK6              100      0       0      18        0.0%
   991                           ;!BITBANK5           100      0       0      15        0.0%
   992                           ;!BANK5              100      0       0      16        0.0%
   993                           ;!BITBANK4           100      0       0      13        0.0%
   994                           ;!BANK4              100      0       0      14        0.0%
   995                           ;!BITBANK2           100      0       0       8        0.0%
   996                           ;!BANK2              100      0       0       9        0.0%
   997                           ;!BITBANK1           100      0       0       6        0.0%
   998                           ;!BANK1              100      0      C8       7       78.1%
   999                           ;!BITBANK3            F4      0       0      12        0.0%
  1000                           ;!BANK3               F4      0       0      10        0.0%
  1001                           ;!BITBANK0            A0      0       0       4        0.0%
  1002                           ;!BANK0               A0      0       0       5        0.0%
  1003                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1004                           ;!COMRAM              5E      3      1B       1       28.7%
  1005                           ;!BITSFR_5             0      0       0     200        0.0%
  1006                           ;!SFR_5                0      0       0     200        0.0%
  1007                           ;!BITSFR_4             0      0       0     200        0.0%
  1008                           ;!SFR_4                0      0       0     200        0.0%
  1009                           ;!BITSFR_3             0      0       0     200        0.0%
  1010                           ;!SFR_3                0      0       0     200        0.0%
  1011                           ;!BITSFR_2             0      0       0     200        0.0%
  1012                           ;!SFR_2                0      0       0     200        0.0%
  1013                           ;!BITSFR_1             0      0       0     200        0.0%
  1014                           ;!SFR_1                0      0       0     200        0.0%
  1015                           ;!BITSFR               0      0       0     200        0.0%
  1016                           ;!SFR                  0      0       0     200        0.0%
  1017                           ;!STACK                0      0       0       2        0.0%
  1018                           ;!NULL                 0      0       0       0        0.0%
  1019                           ;!ABS                  0      0      E3      11        0.0%
  1020                           ;!DATA                 0      0      E3       3        0.0%
  1021                           ;!CODE                 0      0       0       0        0.0%
  1022                           
  1023                           	global	_main
  1024                           
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 186 in file "main_app.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels required when called:    6
  1047 ;; This function calls:
  1048 ;;		_c_touch
  1049 ;;		_d_touch
  1050 ;;		_f_touch
  1051 ;;		_init
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1057                           	file	"main_app.c"
  1058                           	line	186
  1059                           global __ptext0
  1060                           __ptext0:
  1061  0000BC                     psect	text0
  1062                           	file	"main_app.c"
  1063                           	line	186
  1064                           	global	__size_of_main
  1065                           	__size_of_main	equ	__end_of_main-_main
  1066  0000                     	
  1067                           _main:
  1068  0000BC                     ;incstack = 0
  1069                           	opt	stack 25
  1070                           	line	187
  1071                           	
  1072                           l961:
  1073  0000BC                     ;main_app.c: 187:     init();
  1074                           	call	_init	;wreg free
  1075  0000BC  EC21  F001         	line	188
  1076                           	
  1077                           l963:
  1078  0000C0                     ;main_app.c: 188:     TRISDbits.RD0 = 0;
  1079                           	bcf	((c:3989)),c,0	;volatile
  1080  0000C0  9095               	line	189
  1081                           	
  1082                           l965:
  1083  0000C2                     ;main_app.c: 189:     PORTDbits.RD0 = 0;
  1084                           	bcf	((c:3971)),c,0	;volatile
  1085  0000C2  9083               	line	191
  1086                           	
  1087                           l967:
  1088  0000C4                     ;main_app.c: 191:     TRISDbits.RD1 = 0;
  1089                           	bcf	((c:3989)),c,1	;volatile
  1090  0000C4  9295               	line	192
  1091                           	
  1092                           l969:
  1093  0000C6                     ;main_app.c: 192:     PORTDbits.RD1 = 0;
  1094                           	bcf	((c:3971)),c,1	;volatile
  1095  0000C6  9283               	line	194
  1096                           	
  1097                           l971:
  1098  0000C8                     ;main_app.c: 194:     TRISDbits.RD2 = 0;
  1099                           	bcf	((c:3989)),c,2	;volatile
  1100  0000C8  9495               	line	195
  1101                           	
  1102                           l973:
  1103  0000CA                     ;main_app.c: 195:     PORTDbits.RD2 = 0;
  1104                           	bcf	((c:3971)),c,2	;volatile
  1105  0000CA  9483               	line	197
  1106                           	
  1107                           l975:
  1108  0000CC                     ;main_app.c: 197:     TRISDbits.RD3 = 0;
  1109                           	bcf	((c:3989)),c,3	;volatile
  1110  0000CC  9695               	line	198
  1111                           	
  1112                           l977:
  1113  0000CE                     ;main_app.c: 198:     PORTDbits.RD3 = 0;
  1114                           	bcf	((c:3971)),c,3	;volatile
  1115  0000CE  9683               	line	200
  1116                           	
  1117                           l979:
  1118  0000D0                     ;main_app.c: 200:     TRISDbits.RD4 = 0;
  1119                           	bcf	((c:3989)),c,4	;volatile
  1120  0000D0  9895               	line	201
  1121                           	
  1122                           l981:
  1123  0000D2                     ;main_app.c: 201:     PORTDbits.RD4 = 0;
  1124                           	bcf	((c:3971)),c,4	;volatile
  1125  0000D2  9883               	line	203
  1126                           	
  1127                           l983:
  1128  0000D4                     ;main_app.c: 203:     TRISDbits.RD5 = 0;
  1129                           	bcf	((c:3989)),c,5	;volatile
  1130  0000D4  9A95               	line	204
  1131                           	
  1132                           l985:
  1133  0000D6                     ;main_app.c: 204:     PORTDbits.RD5 = 0;
  1134                           	bcf	((c:3971)),c,5	;volatile
  1135  0000D6  9A83               	line	206
  1136                           	
  1137                           l987:
  1138  0000D8                     ;main_app.c: 206:     TRISDbits.RD6 = 0;
  1139                           	bcf	((c:3989)),c,6	;volatile
  1140  0000D8  9C95               	line	207
  1141                           	
  1142                           l989:
  1143  0000DA                     ;main_app.c: 207:     PORTDbits.RD6 = 0;
  1144                           	bcf	((c:3971)),c,6	;volatile
  1145  0000DA  9C83               	line	209
  1146                           	
  1147                           l991:
  1148  0000DC                     ;main_app.c: 209:     TRISDbits.RD7 = 0;
  1149                           	bcf	((c:3989)),c,7	;volatile
  1150  0000DC  9E95               	line	210
  1151                           	
  1152                           l993:
  1153  0000DE                     ;main_app.c: 210:     PORTDbits.RD7 = 0;
  1154                           	bcf	((c:3971)),c,7	;volatile
  1155  0000DE  9E83               	goto	l995
  1156  0000E0  EF72  F000         	line	212
  1157                           ;main_app.c: 212:     while(1){
  1158                           	
  1159                           l141:
  1160  0000E4                     	line	213
  1161                           	
  1162                           l995:
  1163  0000E4                     ;main_app.c: 213:         if (sys_state == 0x64) {
  1164                           		movlw	100
  1165  0000E4  0E64               	xorwf	((c:_sys_state)),c,w
  1166  0000E6  1813               	btfss	status,2
  1167  0000E8  A4D8               	goto	u101
  1168  0000EA  EF79  F000         	goto	u100
  1169  0000EE  EF7B  F000         
  1170                           u101:
  1171  0000F2                     	goto	l995
  1172  0000F2  EF72  F000         u100:
  1173  0000F6                     	line	214
  1174                           	
  1175                           l997:
  1176  0000F6                     ;main_app.c: 214:             d_touch();
  1177                           	call	_d_touch	;wreg free
  1178  0000F6  EC47  F001         	line	215
  1179                           ;main_app.c: 215:             while(sys_state!=0x66) {
  1180                           	goto	l1005
  1181  0000FA  EF90  F000         	
  1182                           l144:
  1183  0000FE                     	line	216
  1184                           	
  1185                           l999:
  1186  0000FE                     ;main_app.c: 216:                 if (sys_state == 0x63) {
  1187                           		movlw	99
  1188  0000FE  0E63               	xorwf	((c:_sys_state)),c,w
  1189  000100  1813               	btfss	status,2
  1190  000102  A4D8               	goto	u111
  1191  000104  EF86  F000         	goto	u110
  1192  000108  EF88  F000         
  1193                           u111:
  1194  00010C                     	goto	l1005
  1195  00010C  EF90  F000         u110:
  1196  000110                     	line	217
  1197                           	
  1198                           l1001:
  1199  000110                     ;main_app.c: 217:                     c_touch();
  1200                           	call	_c_touch	;wreg free
  1201  000110  EC3A  F001         	line	218
  1202                           	
  1203                           l1003:
  1204  000114                     ;main_app.c: 218:                     sys_state = 0x00;
  1205                           	movlw	low(0)
  1206  000114  0E00               	movwf	((c:_sys_state)),c
  1207  000116  6E13               	goto	l1005
  1208  000118  EF90  F000         	line	219
  1209                           ;main_app.c: 219:                 }
  1210                           	
  1211                           l145:
  1212  00011C                     	goto	l1005
  1213  00011C  EF90  F000         	line	220
  1214                           ;main_app.c: 220:             }
  1215                           	
  1216                           l143:
  1217  000120                     	line	215
  1218                           	
  1219                           l1005:
  1220  000120                     ;main_app.c: 215:             while(sys_state!=0x66) {
  1221                           		movlw	102
  1222  000120  0E66               	xorwf	((c:_sys_state)),c,w
  1223  000122  1813               	btfss	status,2
  1224  000124  A4D8               	goto	u121
  1225  000126  EF97  F000         	goto	u120
  1226  00012A  EF99  F000         
  1227                           u121:
  1228  00012E                     	goto	l999
  1229  00012E  EF7F  F000         u120:
  1230  000132                     	goto	l1007
  1231  000132  EF9B  F000         	
  1232                           l146:
  1233  000136                     	line	221
  1234                           	
  1235                           l1007:
  1236  000136                     ;main_app.c: 221:             f_touch();
  1237                           	call	_f_touch	;wreg free
  1238  000136  EC41  F001         	line	222
  1239                           	
  1240                           l1009:
  1241  00013A                     ;main_app.c: 222:             sys_state = 0x00;
  1242                           	movlw	low(0)
  1243  00013A  0E00               	movwf	((c:_sys_state)),c
  1244  00013C  6E13               	goto	l995
  1245  00013E  EF72  F000         	line	223
  1246                           ;main_app.c: 223:         }
  1247                           	
  1248                           l142:
  1249  000142                     	goto	l995
  1250  000142  EF72  F000         	line	224
  1251                           ;main_app.c: 224:     }
  1252                           	
  1253                           l147:
  1254  000146                     	goto	l995
  1255  000146  EF72  F000         	
  1256                           l148:
  1257  00014A                     	line	225
  1258                           	
  1259                           l149:
  1260  00014A                     	global	start
  1261                           	goto	start
  1262  00014A  EF07  F000         	opt stack 0
  1263                           GLOBAL	__end_of_main
  1264                           	__end_of_main:
  1265  00014E                     	signat	_main,89
  1266                           	global	_init
  1267                           
  1268 ;; *************** function _init *****************
  1269 ;; Defined at:
  1270 ;;		line 117 in file "main_app.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    5
  1291 ;; This function calls:
  1292 ;;		_inite_UART
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1298                           	line	117
  1299                           global __ptext1
  1300                           __ptext1:
  1301  000242                     psect	text1
  1302                           	file	"main_app.c"
  1303                           	line	117
  1304                           	global	__size_of_init
  1305                           	__size_of_init	equ	__end_of_init-_init
  1306  0000                     	
  1307                           _init:
  1308  000242                     ;incstack = 0
  1309                           	opt	stack 25
  1310                           	line	119
  1311                           	
  1312                           l935:
  1313  000242                     ;main_app.c: 119:     TMR0L = 0xFF;
  1314                           	setf	((c:4054)),c	;volatile
  1315  000242  68D6               	line	120
  1316                           ;main_app.c: 120:     TMR0H = 0xFF;
  1317                           	setf	((c:4055)),c	;volatile
  1318  000244  68D7               	line	121
  1319                           	
  1320                           l937:
  1321  000246                     ;main_app.c: 121:     T0CON = 0x05;
  1322                           	movlw	low(05h)
  1323  000246  0E05               	movwf	((c:4053)),c	;volatile
  1324  000248  6ED5               	line	122
  1325                           	
  1326                           l939:
  1327  00024A                     ;main_app.c: 122:     T0CONbits.TMR0ON=1;
  1328                           	bsf	((c:4053)),c,7	;volatile
  1329  00024A  8ED5               	line	124
  1330                           	
  1331                           l941:
  1332  00024C                     ;main_app.c: 124:     TRISCbits.RC1 = 0;
  1333                           	bcf	((c:3988)),c,1	;volatile
  1334  00024C  9294               	line	125
  1335                           	
  1336                           l943:
  1337  00024E                     ;main_app.c: 125:     PORTCbits.RC1 = 0;
  1338                           	bcf	((c:3970)),c,1	;volatile
  1339  00024E  9282               	line	127
  1340                           	
  1341                           l945:
  1342  000250                     ;main_app.c: 127:     inite_UART();
  1343                           	call	_inite_UART	;wreg free
  1344  000250  ECC8  F000         	line	128
  1345                           	
  1346                           l103:
  1347  000254                     	return	;funcret
  1348  000254  0012               	opt stack 0
  1349                           GLOBAL	__end_of_init
  1350                           	__end_of_init:
  1351  000256                     	signat	_init,89
  1352                           	global	_inite_UART
  1353                           
  1354 ;; *************** function _inite_UART *****************
  1355 ;; Defined at:
  1356 ;;		line 55 in file "main_app.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    4
  1377 ;; This function calls:
  1378 ;;		_SetupClock
  1379 ;; This function is called by:
  1380 ;;		_init
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1384                           	line	55
  1385                           global __ptext2
  1386                           __ptext2:
  1387  000190                     psect	text2
  1388                           	file	"main_app.c"
  1389                           	line	55
  1390                           	global	__size_of_inite_UART
  1391                           	__size_of_inite_UART	equ	__end_of_inite_UART-_inite_UART
  1392  0000                     	
  1393                           _inite_UART:
  1394  000190                     ;incstack = 0
  1395                           	opt	stack 25
  1396                           	line	56
  1397                           	
  1398                           l827:
  1399  000190                     ;main_app.c: 56:     SetupClock();
  1400                           	call	_SetupClock	;wreg free
  1401  000190  EC4D  F001         	line	59
  1402                           	
  1403                           l829:
  1404  000194                     ;main_app.c: 59:     TRISCbits.RC6 = 0;
  1405                           	bcf	((c:3988)),c,6	;volatile
  1406  000194  9C94               	line	61
  1407                           	
  1408                           l831:
  1409  000196                     ;main_app.c: 61:     TRISCbits.RC7 = 1;
  1410                           	bsf	((c:3988)),c,7	;volatile
  1411  000196  8E94               	line	63
  1412                           	
  1413                           l833:
  1414  000198                     ;main_app.c: 63:     SPBRG = 64;
  1415                           	movlw	low(040h)
  1416  000198  0E40               	movwf	((c:4015)),c	;volatile
  1417  00019A  6EAF               	line	64
  1418                           	
  1419                           l835:
  1420  00019C                     ;main_app.c: 64:     BAUDCONbits.TXCKP = 0;
  1421                           	bcf	((c:4024)),c,4	;volatile
  1422  00019C  98B8               	line	65
  1423                           	
  1424                           l837:
  1425  00019E                     ;main_app.c: 65:     BAUDCONbits.RXDTP = 0;
  1426                           	bcf	((c:4024)),c,5	;volatile
  1427  00019E  9AB8               	line	67
  1428                           	
  1429                           l839:
  1430  0001A0                     ;main_app.c: 67:     TXSTAbits.TX9 = 0;
  1431                           	bcf	((c:4012)),c,6	;volatile
  1432  0001A0  9CAC               	line	68
  1433                           	
  1434                           l841:
  1435  0001A2                     ;main_app.c: 68:     TXSTAbits.TXEN = 1;
  1436                           	bsf	((c:4012)),c,5	;volatile
  1437  0001A2  8AAC               	line	69
  1438                           	
  1439                           l843:
  1440  0001A4                     ;main_app.c: 69:     TXSTAbits.SYNC = 0;
  1441                           	bcf	((c:4012)),c,4	;volatile
  1442  0001A4  98AC               	line	70
  1443                           	
  1444                           l845:
  1445  0001A6                     ;main_app.c: 70:     TXSTAbits.SENDB = 0;
  1446                           	bcf	((c:4012)),c,3	;volatile
  1447  0001A6  96AC               	line	71
  1448                           	
  1449                           l847:
  1450  0001A8                     ;main_app.c: 71:     TXSTAbits.BRGH = 1;
  1451                           	bsf	((c:4012)),c,2	;volatile
  1452  0001A8  84AC               	line	72
  1453                           	
  1454                           l849:
  1455  0001AA                     ;main_app.c: 72:     TXSTAbits.TX9D = 0;
  1456                           	bcf	((c:4012)),c,0	;volatile
  1457  0001AA  90AC               	line	74
  1458                           	
  1459                           l851:
  1460  0001AC                     ;main_app.c: 74:     RCSTAbits.SPEN = 1;
  1461                           	bsf	((c:4011)),c,7	;volatile
  1462  0001AC  8EAB               	line	75
  1463                           	
  1464                           l853:
  1465  0001AE                     ;main_app.c: 75:     RCSTAbits.RX9 = 0;
  1466                           	bcf	((c:4011)),c,6	;volatile
  1467  0001AE  9CAB               	line	76
  1468                           	
  1469                           l855:
  1470  0001B0                     ;main_app.c: 76:     RCSTAbits.CREN = 1;
  1471                           	bsf	((c:4011)),c,4	;volatile
  1472  0001B0  88AB               	line	77
  1473                           	
  1474                           l857:
  1475  0001B2                     ;main_app.c: 77:     RCSTAbits.ADDEN = 0;
  1476                           	bcf	((c:4011)),c,3	;volatile
  1477  0001B2  96AB               	line	78
  1478                           	
  1479                           l859:
  1480  0001B4                     ;main_app.c: 78:     RCSTAbits.RX9D = 0;
  1481                           	bcf	((c:4011)),c,0	;volatile
  1482  0001B4  90AB               	line	80
  1483                           	
  1484                           l861:
  1485  0001B6                     ;main_app.c: 80:     INTCONbits.GIE = 1;
  1486                           	bsf	((c:4082)),c,7	;volatile
  1487  0001B6  8EF2               	line	81
  1488                           	
  1489                           l863:
  1490  0001B8                     ;main_app.c: 81:     INTCONbits.PEIE = 1;
  1491                           	bsf	((c:4082)),c,6	;volatile
  1492  0001B8  8CF2               	line	82
  1493                           	
  1494                           l865:
  1495  0001BA                     ;main_app.c: 82:     PIE1bits.RCIE = 1;
  1496                           	bsf	((c:3997)),c,5	;volatile
  1497  0001BA  8A9D               	line	83
  1498                           	
  1499                           l867:
  1500  0001BC                     ;main_app.c: 83:     PIE1bits.TXIE = 0;
  1501                           	bcf	((c:3997)),c,4	;volatile
  1502  0001BC  989D               	line	85
  1503                           	
  1504                           l82:
  1505  0001BE                     	return	;funcret
  1506  0001BE  0012               	opt stack 0
  1507                           GLOBAL	__end_of_inite_UART
  1508                           	__end_of_inite_UART:
  1509  0001C0                     	signat	_inite_UART,89
  1510                           	global	_SetupClock
  1511                           
  1512 ;; *************** function _SetupClock *****************
  1513 ;; Defined at:
  1514 ;;		line 49 in file "main_app.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		None
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_inite_UART
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1542                           	line	49
  1543                           global __ptext3
  1544                           __ptext3:
  1545  00029A                     psect	text3
  1546                           	file	"main_app.c"
  1547                           	line	49
  1548                           	global	__size_of_SetupClock
  1549                           	__size_of_SetupClock	equ	__end_of_SetupClock-_SetupClock
  1550  0000                     	
  1551                           _SetupClock:
  1552  00029A                     ;incstack = 0
  1553                           	opt	stack 25
  1554                           	line	50
  1555                           	
  1556                           l825:
  1557  00029A                     ;main_app.c: 50:     OSCCONbits.IRCF0 = 1;
  1558                           	bsf	((c:4051)),c,4	;volatile
  1559  00029A  88D3               	line	51
  1560                           ;main_app.c: 51:     OSCCONbits.IRCF1 = 1;
  1561                           	bsf	((c:4051)),c,5	;volatile
  1562  00029C  8AD3               	line	52
  1563                           ;main_app.c: 52:     OSCCONbits.IRCF2 = 1;
  1564                           	bsf	((c:4051)),c,6	;volatile
  1565  00029E  8CD3               	line	53
  1566                           	
  1567                           l79:
  1568  0002A0                     	return	;funcret
  1569  0002A0  0012               	opt stack 0
  1570                           GLOBAL	__end_of_SetupClock
  1571                           	__end_of_SetupClock:
  1572  0002A2                     	signat	_SetupClock,89
  1573                           	global	_f_touch
  1574                           
  1575 ;; *************** function _f_touch *****************
  1576 ;; Defined at:
  1577 ;;		line 176 in file "main_app.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         0       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    4
  1598 ;; This function calls:
  1599 ;;		_closeADC
  1600 ;;		_set_LED_ready
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1606                           	line	176
  1607                           global __ptext4
  1608                           __ptext4:
  1609  000282                     psect	text4
  1610                           	file	"main_app.c"
  1611                           	line	176
  1612                           	global	__size_of_f_touch
  1613                           	__size_of_f_touch	equ	__end_of_f_touch-_f_touch
  1614  0000                     	
  1615                           _f_touch:
  1616  000282                     ;incstack = 0
  1617                           	opt	stack 26
  1618                           	line	177
  1619                           	
  1620                           l951:
  1621  000282                     ;main_app.c: 177:     closeADC();
  1622                           	call	_closeADC	;wreg free
  1623  000282  EC55  F001         	line	178
  1624                           	
  1625                           l953:
  1626  000286                     ;main_app.c: 178:     set_LED_ready(0);
  1627                           	movlw	(0)&0ffh
  1628  000286  0E00               	
  1629                           	call	_set_LED_ready
  1630  000288  EC33  F001         	line	179
  1631                           	
  1632                           l133:
  1633  00028C                     	return	;funcret
  1634  00028C  0012               	opt stack 0
  1635                           GLOBAL	__end_of_f_touch
  1636                           	__end_of_f_touch:
  1637  00028E                     	signat	_f_touch,89
  1638                           	global	_closeADC
  1639                           
  1640 ;; *************** function _closeADC *****************
  1641 ;; Defined at:
  1642 ;;		line 149 in file "main_app.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		None
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_f_touch
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1670                           	line	149
  1671                           global __ptext5
  1672                           __ptext5:
  1673  0002AA                     psect	text5
  1674                           	file	"main_app.c"
  1675                           	line	149
  1676                           	global	__size_of_closeADC
  1677                           	__size_of_closeADC	equ	__end_of_closeADC-_closeADC
  1678  0000                     	
  1679                           _closeADC:
  1680  0002AA                     ;incstack = 0
  1681                           	opt	stack 26
  1682                           	line	150
  1683                           	
  1684                           l879:
  1685  0002AA                     ;main_app.c: 150:     ADCON0bits.ADON = 0;
  1686                           	bcf	((c:4034)),c,0	;volatile
  1687  0002AA  90C2               	line	151
  1688                           	
  1689                           l112:
  1690  0002AC                     	return	;funcret
  1691  0002AC  0012               	opt stack 0
  1692                           GLOBAL	__end_of_closeADC
  1693                           	__end_of_closeADC:
  1694  0002AE                     	signat	_closeADC,89
  1695                           	global	_d_touch
  1696                           
  1697 ;; *************** function _d_touch *****************
  1698 ;; Defined at:
  1699 ;;		line 171 in file "main_app.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    4
  1720 ;; This function calls:
  1721 ;;		_configureADC
  1722 ;;		_set_LED_ready
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1728                           	line	171
  1729                           global __ptext6
  1730                           __ptext6:
  1731  00028E                     psect	text6
  1732                           	file	"main_app.c"
  1733                           	line	171
  1734                           	global	__size_of_d_touch
  1735                           	__size_of_d_touch	equ	__end_of_d_touch-_d_touch
  1736  0000                     	
  1737                           _d_touch:
  1738  00028E                     ;incstack = 0
  1739                           	opt	stack 26
  1740                           	line	172
  1741                           	
  1742                           l947:
  1743  00028E                     ;main_app.c: 172:     configureADC();
  1744                           	call	_configureADC	;wreg free
  1745  00028E  ECF2  F000         	line	173
  1746                           	
  1747                           l949:
  1748  000292                     ;main_app.c: 173:     set_LED_ready(1);
  1749                           	movlw	(01h)&0ffh
  1750  000292  0E01               	
  1751                           	call	_set_LED_ready
  1752  000294  EC33  F001         	line	174
  1753                           	
  1754                           l130:
  1755  000298                     	return	;funcret
  1756  000298  0012               	opt stack 0
  1757                           GLOBAL	__end_of_d_touch
  1758                           	__end_of_d_touch:
  1759  00029A                     	signat	_d_touch,89
  1760                           	global	_set_LED_ready
  1761                           
  1762 ;; *************** function _set_LED_ready *****************
  1763 ;; Defined at:
  1764 ;;		line 153 in file "main_app.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  state           1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  state           1    2[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    3
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_d_touch
  1789 ;;		_f_touch
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           psect	text7,class=CODE,space=0,reloc=2,group=0
  1793                           	line	153
  1794                           global __ptext7
  1795                           __ptext7:
  1796  000266                     psect	text7
  1797                           	file	"main_app.c"
  1798                           	line	153
  1799                           	global	__size_of_set_LED_ready
  1800                           	__size_of_set_LED_ready	equ	__end_of_set_LED_ready-_set_LED_ready
  1801  0000                     	
  1802                           _set_LED_ready:
  1803  000266                     ;incstack = 0
  1804                           	opt	stack 26
  1805                           ;set_LED_ready@state stored from wreg
  1806                           	movwf	((c:set_LED_ready@state)),c
  1807  000266  6E1B               	line	154
  1808                           	
  1809                           l881:
  1810  000268                     ;main_app.c: 154:     LATCbits.LATC1 = state;
  1811                           	btfsc	(c:set_LED_ready@state),c,0
  1812  000268  B01B               	bra	u15
  1813  00026A  D002               	bcf	((c:3979)),c,1	;volatile
  1814  00026C  928B               	bra	u16
  1815  00026E  D001               	u15:
  1816  000270                     	bsf	((c:3979)),c,1	;volatile
  1817  000270  828B               	u16:
  1818  000272                     
  1819                           	line	155
  1820                           	
  1821                           l115:
  1822  000272                     	return	;funcret
  1823  000272  0012               	opt stack 0
  1824                           GLOBAL	__end_of_set_LED_ready
  1825                           	__end_of_set_LED_ready:
  1826  000274                     	signat	_set_LED_ready,4217
  1827                           	global	_configureADC
  1828                           
  1829 ;; *************** function _configureADC *****************
  1830 ;; Defined at:
  1831 ;;		line 134 in file "main_app.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1845 ;;      Params:         0       0       0       0       0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1848 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1849 ;;Total ram usage:        0 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    3
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_d_touch
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           psect	text8,class=CODE,space=0,reloc=2,group=0
  1859                           	line	134
  1860                           global __ptext8
  1861                           __ptext8:
  1862  0001E4                     psect	text8
  1863                           	file	"main_app.c"
  1864                           	line	134
  1865                           	global	__size_of_configureADC
  1866                           	__size_of_configureADC	equ	__end_of_configureADC-_configureADC
  1867  0000                     	
  1868                           _configureADC:
  1869  0001E4                     ;incstack = 0
  1870                           	opt	stack 26
  1871                           	line	136
  1872                           	
  1873                           l871:
  1874  0001E4                     ;main_app.c: 136:     ADCON1bits.PCFG = 0b1101;
  1875                           	movf	((c:4033)),c,w	;volatile
  1876  0001E4  50C1               	andlw	not (((1<<4)-1)<<0)
  1877  0001E6  0BF0               	iorlw	(0Dh & ((1<<4)-1))<<0
  1878  0001E8  090D               	movwf	((c:4033)),c	;volatile
  1879  0001EA  6EC1               	line	137
  1880                           	
  1881                           l873:
  1882  0001EC                     ;main_app.c: 137:     ADCON0bits.CHS0 = 1;
  1883                           	bsf	((c:4034)),c,2	;volatile
  1884  0001EC  84C2               	line	139
  1885                           	
  1886                           l875:
  1887  0001EE                     ;main_app.c: 139:     ADCON2bits.ADFM = 0;
  1888                           	bcf	((c:4032)),c,7	;volatile
  1889  0001EE  9EC0               	line	140
  1890                           ;main_app.c: 140:     ADCON2bits.ACQT = 0x6;
  1891                           	movf	((c:4032)),c,w	;volatile
  1892  0001F0  50C0               	andlw	not (((1<<3)-1)<<3)
  1893  0001F2  0BC7               	iorlw	(06h & ((1<<3)-1))<<3
  1894  0001F4  0930               	movwf	((c:4032)),c	;volatile
  1895  0001F6  6EC0               	line	141
  1896                           ;main_app.c: 141:     ADCON2bits.ADCS = 0x2;
  1897                           	movf	((c:4032)),c,w	;volatile
  1898  0001F8  50C0               	andlw	not (((1<<3)-1)<<0)
  1899  0001FA  0BF8               	iorlw	(02h & ((1<<3)-1))<<0
  1900  0001FC  0902               	movwf	((c:4032)),c	;volatile
  1901  0001FE  6EC0               	line	143
  1902                           	
  1903                           l877:
  1904  000200                     ;main_app.c: 143:     ADCON0bits.ADON = 1;
  1905                           	bsf	((c:4034)),c,0	;volatile
  1906  000200  80C2               	line	147
  1907                           	
  1908                           l109:
  1909  000202                     	return	;funcret
  1910  000202  0012               	opt stack 0
  1911                           GLOBAL	__end_of_configureADC
  1912                           	__end_of_configureADC:
  1913  000204                     	signat	_configureADC,89
  1914                           	global	_c_touch
  1915                           
  1916 ;; *************** function _c_touch *****************
  1917 ;; Defined at:
  1918 ;;		line 181 in file "main_app.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		_get_adc_value
  1941 ;;		_send_volt_value
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           psect	text9,class=CODE,space=0,reloc=2,group=0
  1947                           	line	181
  1948                           global __ptext9
  1949                           __ptext9:
  1950  000274                     psect	text9
  1951                           	file	"main_app.c"
  1952                           	line	181
  1953                           	global	__size_of_c_touch
  1954                           	__size_of_c_touch	equ	__end_of_c_touch-_c_touch
  1955  0000                     	
  1956                           _c_touch:
  1957  000274                     ;incstack = 0
  1958                           	opt	stack 26
  1959                           	line	182
  1960                           	
  1961                           l955:
  1962  000274                     ;main_app.c: 182:     adc_value = get_adc_value();
  1963                           	call	_get_adc_value	;wreg free
  1964  000274  EC02  F001         	movwf	((c:_adc_value)),c
  1965  000278  6E18               	line	183
  1966                           ;main_app.c: 183:     send_volt_value(adc_value);
  1967                           	movf	((c:_adc_value)),c,w
  1968  00027A  5018               	
  1969                           	call	_send_volt_value
  1970  00027C  EC12  F001         	line	184
  1971                           	
  1972                           l136:
  1973  000280                     	return	;funcret
  1974  000280  0012               	opt stack 0
  1975                           GLOBAL	__end_of_c_touch
  1976                           	__end_of_c_touch:
  1977  000282                     	signat	_c_touch,89
  1978                           	global	_send_volt_value
  1979                           
  1980 ;; *************** function _send_volt_value *****************
  1981 ;; Defined at:
  1982 ;;		line 166 in file "main_app.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  voltage         1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  voltage         1    2[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1999 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    3
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_c_touch
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2010                           	line	166
  2011                           global __ptext10
  2012                           __ptext10:
  2013  000224                     psect	text10
  2014                           	file	"main_app.c"
  2015                           	line	166
  2016                           	global	__size_of_send_volt_value
  2017                           	__size_of_send_volt_value	equ	__end_of_send_volt_value-_send_volt_value
  2018  0000                     	
  2019                           _send_volt_value:
  2020  000224                     ;incstack = 0
  2021                           	opt	stack 26
  2022                           ;send_volt_value@voltage stored from wreg
  2023                           	movwf	((c:send_volt_value@voltage)),c
  2024  000224  6E1B               	line	167
  2025                           	
  2026                           l889:
  2027  000226                     ;main_app.c: 167:     while(TXIF==0);
  2028                           	goto	l124
  2029  000226  EF15  F001         	
  2030                           l125:
  2031  00022A                     	
  2032                           l124:
  2033  00022A                     	btfss	c:(31988/8),(31988)&7	;volatile
  2034  00022A  A89E               	goto	u31
  2035  00022C  EF1A  F001         	goto	u30
  2036  000230  EF1C  F001         u31:
  2037  000234                     	goto	l124
  2038  000234  EF15  F001         u30:
  2039  000238                     	goto	l891
  2040  000238  EF1E  F001         	
  2041                           l126:
  2042  00023C                     	line	168
  2043                           	
  2044                           l891:
  2045  00023C                     ;main_app.c: 168:     TXREG = voltage;
  2046                           	movff	(c:send_volt_value@voltage),(c:4013)	;volatile
  2047  00023C  C01B  FFAD         	line	169
  2048                           	
  2049                           l127:
  2050  000240                     	return	;funcret
  2051  000240  0012               	opt stack 0
  2052                           GLOBAL	__end_of_send_volt_value
  2053                           	__end_of_send_volt_value:
  2054  000242                     	signat	_send_volt_value,4217
  2055                           	global	_get_adc_value
  2056                           
  2057 ;; *************** function _get_adc_value *****************
  2058 ;; Defined at:
  2059 ;;		line 157 in file "main_app.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  digi            1    2[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_c_touch
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2087                           	line	157
  2088                           global __ptext11
  2089                           __ptext11:
  2090  000204                     psect	text11
  2091                           	file	"main_app.c"
  2092                           	line	157
  2093                           	global	__size_of_get_adc_value
  2094                           	__size_of_get_adc_value	equ	__end_of_get_adc_value-_get_adc_value
  2095  0000                     	
  2096                           _get_adc_value:
  2097  000204                     ;incstack = 0
  2098                           	opt	stack 26
  2099                           	line	160
  2100                           	
  2101                           l883:
  2102  000204                     ;main_app.c: 158:     char digi;;main_app.c: 160:     ADCON0bits.GO_DONE = 1;
  2103                           	bsf	((c:4034)),c,1	;volatile
  2104  000204  82C2               	line	161
  2105                           ;main_app.c: 161:     while(ADCON0bits.GO_DONE==1);
  2106                           	goto	l118
  2107  000206  EF05  F001         	
  2108                           l119:
  2109  00020A                     	
  2110                           l118:
  2111  00020A                     	btfsc	((c:4034)),c,1	;volatile
  2112  00020A  B2C2               	goto	u21
  2113  00020C  EF0A  F001         	goto	u20
  2114  000210  EF0C  F001         u21:
  2115  000214                     	goto	l118
  2116  000214  EF05  F001         u20:
  2117  000218                     	
  2118                           l120:
  2119  000218                     	line	162
  2120                           ;main_app.c: 162:     digi = ADRESH;
  2121                           	movff	(c:4036),(c:get_adc_value@digi)	;volatile
  2122  000218  CFC4 F01B          	line	163
  2123                           	
  2124                           l885:
  2125  00021C                     ;main_app.c: 163:     return digi;
  2126                           	movf	((c:get_adc_value@digi)),c,w
  2127  00021C  501B               	goto	l121
  2128  00021E  EF11  F001         	
  2129                           l887:
  2130  000222                     	line	164
  2131                           	
  2132                           l121:
  2133  000222                     	return	;funcret
  2134  000222  0012               	opt stack 0
  2135                           GLOBAL	__end_of_get_adc_value
  2136                           	__end_of_get_adc_value:
  2137  000224                     	signat	_get_adc_value,89
  2138                           	global	_Serial_interrupt
  2139                           
  2140 ;; *************** function _Serial_interrupt *****************
  2141 ;; Defined at:
  2142 ;;		line 111 in file "main_app.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    2
  2163 ;; This function calls:
  2164 ;;		_check
  2165 ;; This function is called by:
  2166 ;;		Interrupt level 2
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           psect	intcode,class=CODE,space=0,reloc=2
  2170                           global __pintcode
  2171                           __pintcode:
  2172  000008                     psect	intcode
  2173                           	file	"main_app.c"
  2174                           	line	111
  2175                           	global	__size_of_Serial_interrupt
  2176                           	__size_of_Serial_interrupt	equ	__end_of_Serial_interrupt-_Serial_interrupt
  2177  0000                     	
  2178                           _Serial_interrupt:
  2179  000008                     ;incstack = 0
  2180                           	opt	stack 25
  2181                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  2182  000008  821C               	global	int_func
  2183                           	call	int_func,f	;refresh shadow registers
  2184  00000A  EDE0  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  2185                           global __pintcode_body
  2186                           __pintcode_body:
  2187  0001C0                     int_func:
  2188  0001C0                     
  2189                           	pop	; remove dummy address from shadow register refresh
  2190  0001C0  0006               	line	112
  2191                           	
  2192                           i2l957:
  2193  0001C2                     ;main_app.c: 112:     while(RCIF == 0);
  2194                           	goto	i2l97
  2195  0001C2  EFE3  F000         	
  2196                           i2l98:
  2197  0001C6                     	
  2198                           i2l97:
  2199  0001C6                     	btfss	c:(31989/8),(31989)&7	;volatile
  2200  0001C6  AA9E               	goto	i2u9_41
  2201  0001C8  EFE8  F000         	goto	i2u9_40
  2202  0001CC  EFEA  F000         i2u9_41:
  2203  0001D0                     	goto	i2l97
  2204  0001D0  EFE3  F000         i2u9_40:
  2205  0001D4                     	
  2206                           i2l99:
  2207  0001D4                     	line	113
  2208                           ;main_app.c: 113:     out = RCREG;
  2209                           	movff	(c:4014),(c:_out)	;volatile
  2210  0001D4  CFAE F014          	line	114
  2211                           	
  2212                           i2l959:
  2213  0001D8                     ;main_app.c: 114:     sys_state = check(out);
  2214                           	movf	((c:_out)),c,w
  2215  0001D8  5014               	
  2216                           	call	_check
  2217  0001DA  EC09  F000         	movwf	((c:_sys_state)),c
  2218  0001DE  6E13               	line	115
  2219                           	
  2220                           i2l100:
  2221  0001E0                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2222  0001E0  921C               	retfie f
  2223  0001E2  0011               	opt stack 0
  2224                           GLOBAL	__end_of_Serial_interrupt
  2225                           	__end_of_Serial_interrupt:
  2226  0001E4                     	signat	_Serial_interrupt,89
  2227                           	global	_check
  2228                           
  2229 ;; *************** function _check *****************
  2230 ;; Defined at:
  2231 ;;		line 87 in file "main_app.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  input           1    wreg     unsigned char 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  input           1    1[COMRAM] unsigned char 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      unsigned char 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0
  2246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2249 ;;Total ram usage:        1 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    1
  2252 ;; This function calls:
  2253 ;;		_write_7seg
  2254 ;; This function is called by:
  2255 ;;		_Serial_interrupt
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           psect	text13,class=CODE,space=0,reloc=2,group=0
  2259                           	line	87
  2260                           global __ptext13
  2261                           __ptext13:
  2262  000012                     psect	text13
  2263                           	file	"main_app.c"
  2264                           	line	87
  2265                           	global	__size_of_check
  2266                           	__size_of_check	equ	__end_of_check-_check
  2267  0000                     	
  2268                           _check:
  2269  000012                     ;incstack = 0
  2270                           	opt	stack 25
  2271                           ;check@input stored from wreg
  2272                           	movwf	((c:check@input)),c
  2273  000012  6E1A               	line	88
  2274                           	
  2275                           i2l893:
  2276  000014                     ;main_app.c: 88:     if(RCSTAbits.FERR == 1 || RCSTAbits.OERR == 1){
  2277                           	btfsc	((c:4011)),c,2	;volatile
  2278  000014  B4AB               	goto	i2u4_41
  2279  000016  EF0F  F000         	goto	i2u4_40
  2280  00001A  EF11  F000         i2u4_41:
  2281  00001E                     	goto	i2l897
  2282  00001E  EF1A  F000         i2u4_40:
  2283  000022                     	
  2284                           i2l895:
  2285  000022                     	btfss	((c:4011)),c,1	;volatile
  2286  000022  A2AB               	goto	i2u5_41
  2287  000024  EF16  F000         	goto	i2u5_40
  2288  000028  EF18  F000         i2u5_41:
  2289  00002C                     	goto	i2l905
  2290  00002C  EF23  F000         i2u5_40:
  2291  000030                     	goto	i2l897
  2292  000030  EF1A  F000         	
  2293                           i2l87:
  2294  000034                     	line	89
  2295                           	
  2296                           i2l897:
  2297  000034                     ;main_app.c: 89:         write_7seg(0x79);
  2298                           	movlw	(079h)&0ffh
  2299  000034  0E79               	
  2300                           	call	_write_7seg
  2301  000036  EC51  F001         	line	90
  2302                           	
  2303                           i2l899:
  2304  00003A                     ;main_app.c: 90:         CREN = 0;
  2305                           	bcf	c:(32092/8),(32092)&7	;volatile
  2306  00003A  98AB               	line	91
  2307                           	
  2308                           i2l901:
  2309  00003C                     ;main_app.c: 91:         return 0x65;
  2310                           	movlw	(065h)&0ffh
  2311  00003C  0E65               	goto	i2l88
  2312  00003E  EF5D  F000         	
  2313                           i2l903:
  2314  000042                     	goto	i2l88
  2315  000042  EF5D  F000         	line	92
  2316                           ;main_app.c: 92:     }
  2317                           	
  2318                           i2l85:
  2319  000046                     	line	93
  2320                           	
  2321                           i2l905:
  2322  000046                     ;main_app.c: 93:     if (input == 0x64) {
  2323                           		movlw	100
  2324  000046  0E64               	xorwf	((c:check@input)),c,w
  2325  000048  181A               	btfss	status,2
  2326  00004A  A4D8               	goto	i2u6_41
  2327  00004C  EF2A  F000         	goto	i2u6_40
  2328  000050  EF2C  F000         
  2329                           i2u6_41:
  2330  000054                     	goto	i2l913
  2331  000054  EF34  F000         i2u6_40:
  2332  000058                     	line	94
  2333                           	
  2334                           i2l907:
  2335  000058                     ;main_app.c: 94:         write_7seg(0x5E);
  2336                           	movlw	(05Eh)&0ffh
  2337  000058  0E5E               	
  2338                           	call	_write_7seg
  2339  00005A  EC51  F001         	line	95
  2340                           	
  2341                           i2l909:
  2342  00005E                     ;main_app.c: 95:         return 0x64;
  2343                           	movlw	(064h)&0ffh
  2344  00005E  0E64               	goto	i2l88
  2345  000060  EF5D  F000         	
  2346                           i2l911:
  2347  000064                     	goto	i2l88
  2348  000064  EF5D  F000         	line	96
  2349                           ;main_app.c: 96:     }
  2350                           	
  2351                           i2l89:
  2352  000068                     	line	97
  2353                           	
  2354                           i2l913:
  2355  000068                     ;main_app.c: 97:     if (input == 0x63) {
  2356                           		movlw	99
  2357  000068  0E63               	xorwf	((c:check@input)),c,w
  2358  00006A  181A               	btfss	status,2
  2359  00006C  A4D8               	goto	i2u7_41
  2360  00006E  EF3B  F000         	goto	i2u7_40
  2361  000072  EF3D  F000         
  2362                           i2u7_41:
  2363  000076                     	goto	i2l921
  2364  000076  EF45  F000         i2u7_40:
  2365  00007A                     	line	98
  2366                           	
  2367                           i2l915:
  2368  00007A                     ;main_app.c: 98:         write_7seg(0x39);
  2369                           	movlw	(039h)&0ffh
  2370  00007A  0E39               	
  2371                           	call	_write_7seg
  2372  00007C  EC51  F001         	line	99
  2373                           	
  2374                           i2l917:
  2375  000080                     ;main_app.c: 99:         return 0x63;
  2376                           	movlw	(063h)&0ffh
  2377  000080  0E63               	goto	i2l88
  2378  000082  EF5D  F000         	
  2379                           i2l919:
  2380  000086                     	goto	i2l88
  2381  000086  EF5D  F000         	line	100
  2382                           ;main_app.c: 100:     }
  2383                           	
  2384                           i2l90:
  2385  00008A                     	line	101
  2386                           	
  2387                           i2l921:
  2388  00008A                     ;main_app.c: 101:     if (input == 0x66) {
  2389                           		movlw	102
  2390  00008A  0E66               	xorwf	((c:check@input)),c,w
  2391  00008C  181A               	btfss	status,2
  2392  00008E  A4D8               	goto	i2u8_41
  2393  000090  EF4C  F000         	goto	i2u8_40
  2394  000094  EF4E  F000         
  2395                           i2u8_41:
  2396  000098                     	goto	i2l931
  2397  000098  EF58  F000         i2u8_40:
  2398  00009C                     	line	102
  2399                           	
  2400                           i2l923:
  2401  00009C                     ;main_app.c: 102:         write_7seg(0x71);
  2402                           	movlw	(071h)&0ffh
  2403  00009C  0E71               	
  2404                           	call	_write_7seg
  2405  00009E  EC51  F001         	line	103
  2406                           	
  2407                           i2l925:
  2408  0000A2                     ;main_app.c: 103:         return 0x66;
  2409                           	movlw	(066h)&0ffh
  2410  0000A2  0E66               	goto	i2l88
  2411  0000A4  EF5D  F000         	
  2412                           i2l927:
  2413  0000A8                     	goto	i2l88
  2414  0000A8  EF5D  F000         	line	104
  2415                           	
  2416                           i2l929:
  2417  0000AC                     ;main_app.c: 104:     }
  2418                           	goto	i2l88
  2419  0000AC  EF5D  F000         	line	105
  2420                           ;main_app.c: 105:     else{
  2421                           	
  2422                           i2l91:
  2423  0000B0                     	line	107
  2424                           	
  2425                           i2l931:
  2426  0000B0                     ;main_app.c: 107:         return 0x75;
  2427                           	movlw	(075h)&0ffh
  2428  0000B0  0E75               	goto	i2l88
  2429  0000B2  EF5D  F000         	
  2430                           i2l933:
  2431  0000B6                     	goto	i2l88
  2432  0000B6  EF5D  F000         	line	108
  2433                           ;main_app.c: 108:     }
  2434                           	
  2435                           i2l92:
  2436  0000BA                     	line	109
  2437                           	
  2438                           i2l88:
  2439  0000BA                     	return	;funcret
  2440  0000BA  0012               	opt stack 0
  2441                           GLOBAL	__end_of_check
  2442                           	__end_of_check:
  2443  0000BC                     	signat	_check,4217
  2444                           	global	_write_7seg
  2445                           
  2446 ;; *************** function _write_7seg *****************
  2447 ;; Defined at:
  2448 ;;		line 130 in file "main_app.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  c               1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  c               1    0[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2465 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_check
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           psect	text14,class=CODE,space=0,reloc=2,group=0
  2475                           	line	130
  2476                           global __ptext14
  2477                           __ptext14:
  2478  0002A2                     psect	text14
  2479                           	file	"main_app.c"
  2480                           	line	130
  2481                           	global	__size_of_write_7seg
  2482                           	__size_of_write_7seg	equ	__end_of_write_7seg-_write_7seg
  2483  0000                     	
  2484                           _write_7seg:
  2485  0002A2                     ;incstack = 0
  2486                           	opt	stack 25
  2487                           ;write_7seg@c stored from wreg
  2488                           	movwf	((c:write_7seg@c)),c
  2489  0002A2  6E19               	line	131
  2490                           	
  2491                           i2l869:
  2492  0002A4                     ;main_app.c: 131:     LATD = c;
  2493                           	movff	(c:write_7seg@c),(c:3980)	;volatile
  2494  0002A4  C019  FF8C         	line	132
  2495                           	
  2496                           i2l106:
  2497  0002A8                     	return	;funcret
  2498  0002A8  0012               	opt stack 0
  2499                           GLOBAL	__end_of_write_7seg
  2500                           	__end_of_write_7seg:
  2501  0002AA                     	signat	_write_7seg,4217
  2502                           	GLOBAL	__activetblptr
  2503                           __activetblptr	EQU	0
  2504  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  2505                           	PSECT	rparam,class=COMRAM,space=1,noexec
  2506                           	GLOBAL	__Lrparam
  2507                           	FNCONF	rparam,??,?
  2508                           	GLOBAL	___rparam_used
  2509                           	___rparam_used EQU 1
  2510  0000                     	GLOBAL	___param_bank
  2511                           	___param_bank EQU 0
  2512  0000                     GLOBAL	__Lparam, __Hparam
  2513                           GLOBAL	__Lrparam, __Hrparam
  2514                           __Lparam	EQU	__Lrparam
  2515  0000                     __Hparam	EQU	__Hrparam
  2516  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  2517                           	global	btemp
  2518                           btemp:
  2519  00001C                     	ds	1
  2520  00001C                     	global	int$flags
  2521                           	int$flags	set btemp
  2522  0000                     	global	wtemp8
  2523                           	wtemp8 set btemp+1
  2524  0000                     	global	ttemp5
  2525                           	ttemp5 set btemp+1
  2526  0000                     	global	ttemp6
  2527                           	ttemp6 set btemp+4
  2528  0000                     	global	ttemp7
  2529                           	ttemp7 set btemp+8
  2530  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3      27
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _f_touch->_set_LED_ready
    _d_touch->_set_LED_ready
    _c_touch->_get_adc_value
    _c_touch->_send_volt_value

Critical Paths under _Serial_interrupt in COMRAM

    _Serial_interrupt->_check
    _check->_write_7seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _Serial_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Serial_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Serial_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Serial_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Serial_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Serial_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Serial_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Serial_interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                            _c_touch
                            _d_touch
                            _f_touch
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _inite_UART
 ---------------------------------------------------------------------------------
 (2) _inite_UART                                           0     0      0       0
                         _SetupClock
 ---------------------------------------------------------------------------------
 (3) _SetupClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _f_touch                                              0     0      0      15
                           _closeADC
                      _set_LED_ready
 ---------------------------------------------------------------------------------
 (2) _closeADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _d_touch                                              0     0      0      15
                       _configureADC
                      _set_LED_ready
 ---------------------------------------------------------------------------------
 (2) _set_LED_ready                                        1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _c_touch                                              0     0      0      30
                      _get_adc_value
                    _send_volt_value
 ---------------------------------------------------------------------------------
 (2) _send_volt_value                                      1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_adc_value                                        1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Serial_interrupt                                     0     0      0      60
                              _check
 ---------------------------------------------------------------------------------
 (5) _check                                                1     1      0      60
                                              1 COMRAM     1     1      0
                         _write_7seg
 ---------------------------------------------------------------------------------
 (6) _write_7seg                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _c_touch
     _get_adc_value
     _send_volt_value
   _d_touch
     _configureADC
     _set_LED_ready
   _f_touch
     _closeADC
     _set_LED_ready
   _init
     _inite_UART
       _SetupClock

 _Serial_interrupt (ROOT)
   _check
     _write_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3      1B       1       28.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3      11        0.0%
DATA                 0      0      E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 09 15:46:36 2019

            ?_configureADC 0019                          _i 0011                         l82 01BE  
                       l79 02A0                         u20 0218                         u21 0214  
                       u30 0238                         u31 0234                         u15 0270  
                       u16 0272                __CFG_BORV$3 000000      __end_of_set_LED_ready 0274  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l103 0254                        l120 0218  
                      l112 02AC                        l121 0222                        l130 0298  
                      l115 0272                        l124 022A                        l125 022A  
                      l109 0202                        l133 028C                        l141 00E4  
                      l118 020A                        l126 023C                        l142 0142  
                      l119 020A                        l127 0240                        l143 0120  
                      l136 0280                        l144 00FE                        l145 011C  
                      l146 0136                        l147 0146                        l148 014A  
                      l149 014A                        l831 0196                        l825 029A  
                      l841 01A2                        l833 0198                        l851 01AC  
                      l843 01A4                        l835 019C                        l827 0190  
                      l861 01B6                        l853 01AE                        l845 01A6  
                      l837 019E                        l829 0194                        l941 024C  
                      l871 01E4                        l951 0282                        l863 01B8  
                      l855 01B0                        l847 01A8                        l839 01A0  
                      l943 024E                        l935 0242                        l873 01EC  
                      l881 0268                        l953 0286                        l865 01BA  
                      l857 01B2                        l849 01AA                        l945 0250  
                      l937 0246                        l961 00BC                        l883 0204  
                      l891 023C                        l955 0274                        l875 01EE  
                      l947 028E                        l867 01BC                        l859 01B4  
                      l939 024A                        l971 00C8                        l963 00C0  
                      l885 021C                        l877 0200                        l949 0292  
                      l981 00D2                        l973 00CA                        l965 00C2  
                      l887 0222                        l879 02AA                        l991 00DC  
                      l983 00D4                        l975 00CC                        l967 00C4  
                      l889 0226                        l993 00DE                        l985 00D6  
                      l977 00CE                        l969 00C6                        l995 00E4  
                      l987 00D8                        l979 00D0                        l997 00F6  
                      l989 00DA                        l999 00FE               __CFG_CPB$OFF 000000  
                      u100 00F6                        u101 00F2                        u110 0110  
                      u111 010C                        u120 0132                        u121 012E  
             __CFG_CPD$OFF 000000               __CFG_BOR$OFF 000000                        _out 0014  
                      wreg 000FE8               __CFG_FOSC$HS 000000               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1001 0110                       l1003 0114  
                     l1005 0120                       l1007 0136                       l1009 013A  
                     _CREN 007D5C                       _LATD 000F8C                       _RCIF 007CF5  
                     i2l90 008A                       i2l91 00B0                       i2l92 00BA  
                     i2l85 0046                       i2l87 0034                       i2l88 00BA  
                     i2l89 0068                       i2l97 01C6                       i2l98 01C6  
                     i2l99 01D4                       _TXIF 007CF4            ??_get_adc_value 001B  
                     _baud 0015                       _main 00BC                       _init 0242  
                     _temp 0017                       fsr1l 000FE1                       btemp 001C  
                     start 000E              __CFG_IESO$OFF 000000             ??_configureADC 001B  
            __CFG_MCLRE$ON 000000               ___param_bank 000000              __CFG_PLLDIV$5 000000  
           __CFG_CCP2MX$ON 000000                      ?_main 0019                      ?_init 0019  
                    _T0CON 000FD5             __CFG_DEBUG$OFF 000000                      i2l100 01E0  
                    i2l106 02A8                      i2l901 003C                      i2l911 0064  
                    i2l903 0042                      i2l921 008A                      i2l913 0068  
                    i2l905 0046                      i2l923 009C                      i2l931 00B0  
                    i2l915 007A                      i2l907 0058                      i2l933 00B6  
                    i2l925 00A2                      i2l917 0080                      i2l909 005E  
                    i2l927 00A8                      i2l919 0086                      i2l929 00AC  
                    i2l869 02A4                      i2l893 0014                      i2l957 01C2  
                    i2l895 0022                      i2l959 01D8                      i2l897 0034  
                    i2l899 003A                      _RCREG 000FAE                      _TMR0H 000FD7  
                    _TMR0L 000FD6                      _SPBRG 000FAF              __CFG_USBDIV$1 000000  
                    _TXREG 000FAD              __CFG_PWRT$OFF 000000            __end_of_c_touch 0282  
            __CFG_WRT0$OFF 000000            __end_of_d_touch 029A              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000            __end_of_f_touch 028E             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000                      _check 0012  
           __CFG_EBTRB$OFF 000000                      _input 0010                      tablat 000FF5  
        ?_Serial_interrupt 0019                      ttemp5 001D                      ttemp6 0020  
                    ttemp7 0024                      status 000FD8                      wtemp8 001D  
           __CFG_ICPRT$OFF 000000         ??_Serial_interrupt 001B            __initialization 014E  
             __end_of_main 014E               __end_of_init 0256                     ??_main 001C  
               _MsgFromPIC 0001                     ??_init 001B              __activetblptr 000000  
                   ?_check 0019                     _ADRESH 000FC4                     i2u4_40 0022  
                   i2u4_41 001E                     i2u5_40 0030                     i2u5_41 002C  
                   i2u6_40 0058                     i2u6_41 0054                     i2u7_40 007A  
                   i2u7_41 0076                     i2u8_40 009C                     i2u8_41 0098  
                   i2u9_40 01D4                     i2u9_41 01D0           __end_of_closeADC 02AE  
           __CFG_XINST$OFF 000000             __CFG_STVREN$ON 000000                 _SetupClock 029A  
                   clear_0 0174                     clear_1 0180                  ??_c_touch 001C  
                ??_d_touch 001C                  ??_f_touch 001C               __pdataCOMRAM 0001  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
     __end_of_configureADC 0204              _MessageBuffer 0100                 __accesstop 0060  
  __end_of__initialization 0186            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
 __size_of_send_volt_value 001E             __pcstackCOMRAM 0019              __end_of_check 00BC  
                  ??_check 001A                 __pbssBANK1 0100                ?_SetupClock 0019  
                ?_closeADC 0019            __CFG_VREGEN$OFF 000000     __size_of_set_LED_ready 000E  
    __end_of_get_adc_value 0224                    __Hparam 0000                 check@input 001A  
                  __Lparam 0000                 _inite_UART 0190          ??_send_volt_value 001B  
__size_of_Serial_interrupt 01DC                    __pcinit 014E                    _c_touch 0274  
                  __ramtop 0800                    _d_touch 028E                    _f_touch 0282  
                  __ptext0 00BC                    __ptext1 0242                    __ptext2 0190  
                  __ptext3 029A                    __ptext4 0282                    __ptext5 02AA  
                  __ptext6 028E                    __ptext7 0266                    __ptext8 01E4  
                  __ptext9 0274                  _T0CONbits 000FD5      __size_of_configureADC 0020  
               ??_closeADC 001B             __pintcode_body 01C0       end_of_initialization 0186  
      __size_of_SetupClock 0008                    int_func 01C0                  _RCSTAbits 000FAB  
                  postdec1 000FE5               _configureADC 01E4                    postinc0 000FEE  
            _set_LED_ready 0266                  _PORTCbits 000F82                  _PORTDbits 000F83  
                _TRISCbits 000F94                  _TRISDbits 000F95                  _TXSTAbits 000FAC  
              ?_inite_UART 0019                 _write_7seg 02A2                _BAUDCONbits 000FB8  
           ?_set_LED_ready 0019              __pidataCOMRAM 0256        start_initialization 014E  
             ??_SetupClock 001B           _Serial_interrupt 0008           __CFG_LPT1OSC$OFF 000000  
              __pbssCOMRAM 0011                  _adc_value 0018        __size_of_inite_UART 0030  
        __size_of_closeADC 0004         __end_of_SetupClock 02A2            _send_volt_value 0224  
                __pintcode 0008            ??_set_LED_ready 001B                ?_write_7seg 0019  
                 ?_c_touch 0019                   ?_d_touch 0019                   ?_f_touch 0019  
       set_LED_ready@state 001B     send_volt_value@voltage 001B             __size_of_check 00AA  
                _sec_input 000F                   _LATCbits 000F8B                   _PIE1bits 000F9D  
         __CFG_WDTPS$32768 000000                write_7seg@c 0019                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0     __size_of_get_adc_value 0020  
  __end_of_send_volt_value 0242                  copy_data0 0162                  _sys_state 0013  
      __size_of_write_7seg 0008                   __Hrparam 0000                   __Lrparam 0000  
             ??_inite_UART 001B           __size_of_c_touch 000E           __size_of_d_touch 000C  
         __size_of_f_touch 000C                   __ptext10 0224                   __ptext11 0204  
                 __ptext13 0012                   __ptext14 02A2                   _closeADC 02AA  
 __end_of_Serial_interrupt 01E4         __end_of_inite_UART 01C0              __size_of_main 0092  
            __size_of_init 0014              _get_adc_value 0204                   int$flags 001C  
              _UART1Config 0016          get_adc_value@digi 001B      __CFG_CPUDIV$OSC2_PLL3 000000  
               _INTCONbits 000FF2           ?_send_volt_value 0019                   intlevel2 0000  
           ?_get_adc_value 0019                 _OSCCONbits 000FD3               ??_write_7seg 0019  
       __end_of_write_7seg 02AA  
