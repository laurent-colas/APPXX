

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 09 15:44:56 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     	FNCALL	_main,_c_touch
   448                           	FNCALL	_main,_d_touch
   449                           	FNCALL	_main,_f_touch
   450                           	FNCALL	_main,_init
   451                           	FNCALL	_init,_inite_UART
   452                           	FNCALL	_inite_UART,_SetupClock
   453                           	FNCALL	_f_touch,_closeADC
   454                           	FNCALL	_f_touch,_set_LED_ready
   455                           	FNCALL	_d_touch,_configureADC
   456                           	FNCALL	_d_touch,_set_LED_ready
   457                           	FNCALL	_c_touch,_get_adc_value
   458                           	FNCALL	_c_touch,_send_volt_value
   459                           	FNROOT	_main
   460                           	FNCALL	_Serial_interrupt,_check
   461                           	FNCALL	_check,_write_7seg
   462                           	FNCALL	intlevel2,_Serial_interrupt
   463                           	global	intlevel2
   464                           	FNROOT	intlevel2
   465                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   466                           global __pidataCOMRAM
   467                           __pidataCOMRAM:
   468  000254                     	file	"main_app.c"
   469                           	line	28
   470                           
   471                           ;initializer for _MsgFromPIC
   472                           	db	low(0Dh)
   473  000254  0D                 	db	low(0Ah)
   474  000255  0A                 	db	low(059h)
   475  000256  59                 	db	low(06Fh)
   476  000257  6F                 	db	low(075h)
   477  000258  75                 	db	low(020h)
   478  000259  20                 	db	low(074h)
   479  00025A  74                 	db	low(079h)
   480  00025B  79                 	db	low(070h)
   481  00025C  70                 	db	low(065h)
   482  00025D  65                 	db	low(064h)
   483  00025E  64                 	db	low(020h)
   484  00025F  20                 	db	low(03Ah)
   485  000260  3A                 	db	low(0)
   486  000261  00                 	line	25
   487                           
   488                           ;initializer for _sec_input
   489                           	db	low(063h)
   490  000262  63                 	line	24
   491                           
   492                           ;initializer for _input
   493                           	db	low(064h)
   494  000263  64                 	global	_sys_state
   495                           	global	_out
   496                           	global	_adc_value
   497                           	global	_PORTDbits
   498                           _PORTDbits	set	0xF83
   499  0000                     	global	_TRISDbits
   500                           _TRISDbits	set	0xF95
   501  0000                     	global	_TXREG
   502                           _TXREG	set	0xFAD
   503  0000                     	global	_ADRESH
   504                           _ADRESH	set	0xFC4
   505  0000                     	global	_LATCbits
   506                           _LATCbits	set	0xF8B
   507  0000                     	global	_ADCON2bits
   508                           _ADCON2bits	set	0xFC0
   509  0000                     	global	_ADCON0bits
   510                           _ADCON0bits	set	0xFC2
   511  0000                     	global	_ADCON1bits
   512                           _ADCON1bits	set	0xFC1
   513  0000                     	global	_LATD
   514                           _LATD	set	0xF8C
   515  0000                     	global	_PORTCbits
   516                           _PORTCbits	set	0xF82
   517  0000                     	global	_T0CONbits
   518                           _T0CONbits	set	0xFD5
   519  0000                     	global	_T0CON
   520                           _T0CON	set	0xFD5
   521  0000                     	global	_TMR0H
   522                           _TMR0H	set	0xFD7
   523  0000                     	global	_TMR0L
   524                           _TMR0L	set	0xFD6
   525  0000                     	global	_RCREG
   526                           _RCREG	set	0xFAE
   527  0000                     	global	_PIE1bits
   528                           _PIE1bits	set	0xF9D
   529  0000                     	global	_INTCONbits
   530                           _INTCONbits	set	0xFF2
   531  0000                     	global	_RCSTAbits
   532                           _RCSTAbits	set	0xFAB
   533  0000                     	global	_TXSTAbits
   534                           _TXSTAbits	set	0xFAC
   535  0000                     	global	_BAUDCONbits
   536                           _BAUDCONbits	set	0xFB8
   537  0000                     	global	_SPBRG
   538                           _SPBRG	set	0xFAF
   539  0000                     	global	_TRISCbits
   540                           _TRISCbits	set	0xF94
   541  0000                     	global	_OSCCONbits
   542                           _OSCCONbits	set	0xFD3
   543  0000                     	global	_TXIF
   544                           _TXIF	set	0x7CF4
   545  0000                     	global	_RCIF
   546                           _RCIF	set	0x7CF5
   547  0000                     ; #config settings
   548                           global __CFG_PLLDIV$5
   549                           __CFG_PLLDIV$5 equ 0x0
   550  0000                     global __CFG_CPUDIV$OSC2_PLL3
   551                           __CFG_CPUDIV$OSC2_PLL3 equ 0x0
   552  0000                     global __CFG_USBDIV$1
   553                           __CFG_USBDIV$1 equ 0x0
   554  0000                     global __CFG_FOSC$HS
   555                           __CFG_FOSC$HS equ 0x0
   556  0000                     global __CFG_FCMEN$OFF
   557                           __CFG_FCMEN$OFF equ 0x0
   558  0000                     global __CFG_IESO$OFF
   559                           __CFG_IESO$OFF equ 0x0
   560  0000                     global __CFG_PWRT$OFF
   561                           __CFG_PWRT$OFF equ 0x0
   562  0000                     global __CFG_BOR$OFF
   563                           __CFG_BOR$OFF equ 0x0
   564  0000                     global __CFG_BORV$3
   565                           __CFG_BORV$3 equ 0x0
   566  0000                     global __CFG_VREGEN$OFF
   567                           __CFG_VREGEN$OFF equ 0x0
   568  0000                     global __CFG_WDT$OFF
   569                           __CFG_WDT$OFF equ 0x0
   570  0000                     global __CFG_WDTPS$32768
   571                           __CFG_WDTPS$32768 equ 0x0
   572  0000                     global __CFG_CCP2MX$ON
   573                           __CFG_CCP2MX$ON equ 0x0
   574  0000                     global __CFG_PBADEN$OFF
   575                           __CFG_PBADEN$OFF equ 0x0
   576  0000                     global __CFG_LPT1OSC$OFF
   577                           __CFG_LPT1OSC$OFF equ 0x0
   578  0000                     global __CFG_MCLRE$ON
   579                           __CFG_MCLRE$ON equ 0x0
   580  0000                     global __CFG_STVREN$ON
   581                           __CFG_STVREN$ON equ 0x0
   582  0000                     global __CFG_LVP$OFF
   583                           __CFG_LVP$OFF equ 0x0
   584  0000                     global __CFG_ICPRT$OFF
   585                           __CFG_ICPRT$OFF equ 0x0
   586  0000                     global __CFG_XINST$OFF
   587                           __CFG_XINST$OFF equ 0x0
   588  0000                     global __CFG_DEBUG$OFF
   589                           __CFG_DEBUG$OFF equ 0x0
   590  0000                     global __CFG_CP0$OFF
   591                           __CFG_CP0$OFF equ 0x0
   592  0000                     global __CFG_CP1$OFF
   593                           __CFG_CP1$OFF equ 0x0
   594  0000                     global __CFG_CP2$OFF
   595                           __CFG_CP2$OFF equ 0x0
   596  0000                     global __CFG_CP3$OFF
   597                           __CFG_CP3$OFF equ 0x0
   598  0000                     global __CFG_CPB$OFF
   599                           __CFG_CPB$OFF equ 0x0
   600  0000                     global __CFG_CPD$OFF
   601                           __CFG_CPD$OFF equ 0x0
   602  0000                     global __CFG_WRT0$OFF
   603                           __CFG_WRT0$OFF equ 0x0
   604  0000                     global __CFG_WRT1$OFF
   605                           __CFG_WRT1$OFF equ 0x0
   606  0000                     global __CFG_WRT2$OFF
   607                           __CFG_WRT2$OFF equ 0x0
   608  0000                     global __CFG_WRT3$OFF
   609                           __CFG_WRT3$OFF equ 0x0
   610  0000                     global __CFG_WRTC$OFF
   611                           __CFG_WRTC$OFF equ 0x0
   612  0000                     global __CFG_WRTB$OFF
   613                           __CFG_WRTB$OFF equ 0x0
   614  0000                     global __CFG_WRTD$OFF
   615                           __CFG_WRTD$OFF equ 0x0
   616  0000                     global __CFG_EBTR0$OFF
   617                           __CFG_EBTR0$OFF equ 0x0
   618  0000                     global __CFG_EBTR1$OFF
   619                           __CFG_EBTR1$OFF equ 0x0
   620  0000                     global __CFG_EBTR2$OFF
   621                           __CFG_EBTR2$OFF equ 0x0
   622  0000                     global __CFG_EBTR3$OFF
   623                           __CFG_EBTR3$OFF equ 0x0
   624  0000                     global __CFG_EBTRB$OFF
   625                           __CFG_EBTRB$OFF equ 0x0
   626  0000                     	file	"C:\Users\laure\AppData\Local\Temp\siqc."
   627                           	line	#
   628                           psect	cinit,class=CODE,delta=1,reloc=2
   629                           global __pcinit
   630                           __pcinit:
   631  00014C                     global start_initialization
   632                           start_initialization:
   633  00014C                     
   634                           global __initialization
   635                           __initialization:
   636  00014C                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   637                           global __pbssCOMRAM
   638                           __pbssCOMRAM:
   639  000011                     	global	_i
   640                           	global	_i
   641                           _i:
   642  000011                            ds      2
   643  000011                     	global	_sys_state
   644                           _sys_state:
   645  000013                            ds      1
   646  000013                     	global	_out
   647                           _out:
   648  000014                            ds      1
   649  000014                     	global	_baud
   650                           	global	_baud
   651                           _baud:
   652  000015                            ds      1
   653  000015                     	global	_UART1Config
   654                           	global	_UART1Config
   655                           _UART1Config:
   656  000016                            ds      1
   657  000016                     	global	_temp
   658                           	global	_temp
   659                           _temp:
   660  000017                            ds      1
   661  000017                     	global	_adc_value
   662                           _adc_value:
   663  000018                            ds      1
   664  000018                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   665                           global __pdataCOMRAM
   666                           __pdataCOMRAM:
   667  000001                     	file	"main_app.c"
   668                           	line	28
   669                           	global	_MsgFromPIC
   670                           	global	_MsgFromPIC
   671                           _MsgFromPIC:
   672  000001                            ds      14
   673  000001                     psect	dataCOMRAM
   674                           	file	"main_app.c"
   675                           	line	25
   676                           	global	_sec_input
   677                           	global	_sec_input
   678                           _sec_input:
   679  00000F                            ds      1
   680  00000F                     psect	dataCOMRAM
   681                           	file	"main_app.c"
   682                           	line	24
   683                           	global	_input
   684                           	global	_input
   685                           _input:
   686  000010                            ds      1
   687  000010                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
   688                           global __pbssBANK1
   689                           __pbssBANK1:
   690  000100                     	global	_MessageBuffer
   691                           	global	_MessageBuffer
   692                           _MessageBuffer:
   693  000100                            ds      200
   694  000100                     	file	"C:\Users\laure\AppData\Local\Temp\siqc."
   695                           	line	#
   696                           psect	cinit
   697                           ; Initialize objects allocated to COMRAM (16 bytes)
   698                           	global __pidataCOMRAM
   699                           	; load TBLPTR registers with __pidataCOMRAM
   700                           	movlw	low (__pidataCOMRAM)
   701  00014C  0E54               	movwf	tblptrl
   702  00014E  6EF6               	movlw	high(__pidataCOMRAM)
   703  000150  0E02               	movwf	tblptrh
   704  000152  6EF7               	movlw	low highword(__pidataCOMRAM)
   705  000154  0E00               	movwf	tblptru
   706  000156  6EF8               	lfsr	0,__pdataCOMRAM
   707  000158  EE00  F001         	lfsr	1,16
   708  00015C  EE10 F010          	copy_data0:
   709  000160                     	tblrd	*+
   710  000160  0009               	movff	tablat, postinc0
   711  000162  CFF5 FFEE          	movf	postdec1,w
   712  000166  50E5               	movf	fsr1l,w
   713  000168  50E1               	bnz	copy_data0
   714  00016A  E1FA               	line	#
   715                           ; Clear objects allocated to BANK1 (200 bytes)
   716                           	global __pbssBANK1
   717                           lfsr	0,__pbssBANK1
   718  00016C  EE01  F000         movlw	200
   719  000170  0EC8               clear_0:
   720  000172                     clrf	postinc0,c
   721  000172  6AEE               decf	wreg
   722  000174  06E8               bnz	clear_0
   723  000176  E1FD               ; Clear objects allocated to COMRAM (8 bytes)
   724                           	global __pbssCOMRAM
   725                           lfsr	0,__pbssCOMRAM
   726  000178  EE00  F011         movlw	8
   727  00017C  0E08               clear_1:
   728  00017E                     clrf	postinc0,c
   729  00017E  6AEE               decf	wreg
   730  000180  06E8               bnz	clear_1
   731  000182  E1FD               psect cinit,class=CODE,delta=1
   732                           global end_of_initialization,__end_of__initialization
   733                           
   734                           ;End of C runtime variable initialization code
   735                           
   736                           end_of_initialization:
   737  000184                     __end_of__initialization:
   738  000184                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   739  000184  901C               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   740  000186  921C               movlb 0
   741  000188  0100               goto _main	;jump to C main() function
   742  00018A  EF5D  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   743                           global __pcstackCOMRAM
   744                           __pcstackCOMRAM:
   745  000019                     ?_write_7seg:	; 1 bytes @ 0x0
   746  000019                     ??_write_7seg:	; 1 bytes @ 0x0
   747  000019                     ?_SetupClock:	; 1 bytes @ 0x0
   748  000019                     ?_inite_UART:	; 1 bytes @ 0x0
   749  000019                     ?_check:	; 1 bytes @ 0x0
   750  000019                     ?_Serial_interrupt:	; 1 bytes @ 0x0
   751  000019                     ?_init:	; 1 bytes @ 0x0
   752  000019                     ?_configureADC:	; 1 bytes @ 0x0
   753  000019                     ?_closeADC:	; 1 bytes @ 0x0
   754  000019                     ?_set_LED_ready:	; 1 bytes @ 0x0
   755  000019                     ?_get_adc_value:	; 1 bytes @ 0x0
   756  000019                     ?_send_volt_value:	; 1 bytes @ 0x0
   757  000019                     ?_d_touch:	; 1 bytes @ 0x0
   758  000019                     ?_f_touch:	; 1 bytes @ 0x0
   759  000019                     ?_c_touch:	; 1 bytes @ 0x0
   760  000019                     ?_main:	; 1 bytes @ 0x0
   761  000019                     	global	write_7seg@c
   762                           write_7seg@c:	; 1 bytes @ 0x0
   763  000019                     	ds   1
   764  000019                     ??_check:	; 1 bytes @ 0x1
   765  00001A                     	global	check@input
   766                           check@input:	; 1 bytes @ 0x1
   767  00001A                     	ds   1
   768  00001A                     ??_SetupClock:	; 1 bytes @ 0x2
   769  00001B                     ??_inite_UART:	; 1 bytes @ 0x2
   770  00001B                     ??_Serial_interrupt:	; 1 bytes @ 0x2
   771  00001B                     ??_init:	; 1 bytes @ 0x2
   772  00001B                     ??_configureADC:	; 1 bytes @ 0x2
   773  00001B                     ??_closeADC:	; 1 bytes @ 0x2
   774  00001B                     ??_set_LED_ready:	; 1 bytes @ 0x2
   775  00001B                     ??_get_adc_value:	; 1 bytes @ 0x2
   776  00001B                     ??_send_volt_value:	; 1 bytes @ 0x2
   777  00001B                     	global	set_LED_ready@state
   778                           set_LED_ready@state:	; 1 bytes @ 0x2
   779  00001B                     	global	get_adc_value@digi
   780                           get_adc_value@digi:	; 1 bytes @ 0x2
   781  00001B                     	global	send_volt_value@voltage
   782                           send_volt_value@voltage:	; 1 bytes @ 0x2
   783  00001B                     	ds   1
   784  00001B                     ??_d_touch:	; 1 bytes @ 0x3
   785  00001C                     ??_f_touch:	; 1 bytes @ 0x3
   786  00001C                     ??_c_touch:	; 1 bytes @ 0x3
   787  00001C                     ??_main:	; 1 bytes @ 0x3
   788  00001C                     ;!
   789                           ;!Data Sizes:
   790                           ;!    Strings     0
   791                           ;!    Constant    0
   792                           ;!    Data        16
   793                           ;!    BSS         208
   794                           ;!    Persistent  0
   795                           ;!    Stack       0
   796                           ;!
   797                           ;!Auto Spaces:
   798                           ;!    Space          Size  Autos    Used
   799                           ;!    COMRAM           94      3      27
   800                           ;!    BANK0           160      0       0
   801                           ;!    BANK1           256      0     200
   802                           ;!    BANK2           256      0       0
   803                           ;!    BANK3           256      0       0
   804                           ;!    BANK4           256      0       0
   805                           ;!    BANK5           256      0       0
   806                           ;!    BANK6           256      0       0
   807                           ;!    BANK7           256      0       0
   808                           
   809                           ;!
   810                           ;!Pointer List with Targets:
   811                           ;!
   812                           ;!    None.
   813                           
   814                           
   815                           ;!
   816                           ;!Critical Paths under _main in COMRAM
   817                           ;!
   818                           ;!    _f_touch->_set_LED_ready
   819                           ;!    _d_touch->_set_LED_ready
   820                           ;!    _c_touch->_get_adc_value
   821                           ;!    _c_touch->_send_volt_value
   822                           ;!
   823                           ;!Critical Paths under _Serial_interrupt in COMRAM
   824                           ;!
   825                           ;!    _Serial_interrupt->_check
   826                           ;!    _check->_write_7seg
   827                           ;!
   828                           ;!Critical Paths under _main in BANK0
   829                           ;!
   830                           ;!    None.
   831                           ;!
   832                           ;!Critical Paths under _Serial_interrupt in BANK0
   833                           ;!
   834                           ;!    None.
   835                           ;!
   836                           ;!Critical Paths under _main in BANK1
   837                           ;!
   838                           ;!    None.
   839                           ;!
   840                           ;!Critical Paths under _Serial_interrupt in BANK1
   841                           ;!
   842                           ;!    None.
   843                           ;!
   844                           ;!Critical Paths under _main in BANK2
   845                           ;!
   846                           ;!    None.
   847                           ;!
   848                           ;!Critical Paths under _Serial_interrupt in BANK2
   849                           ;!
   850                           ;!    None.
   851                           ;!
   852                           ;!Critical Paths under _main in BANK3
   853                           ;!
   854                           ;!    None.
   855                           ;!
   856                           ;!Critical Paths under _Serial_interrupt in BANK3
   857                           ;!
   858                           ;!    None.
   859                           ;!
   860                           ;!Critical Paths under _main in BANK4
   861                           ;!
   862                           ;!    None.
   863                           ;!
   864                           ;!Critical Paths under _Serial_interrupt in BANK4
   865                           ;!
   866                           ;!    None.
   867                           ;!
   868                           ;!Critical Paths under _main in BANK5
   869                           ;!
   870                           ;!    None.
   871                           ;!
   872                           ;!Critical Paths under _Serial_interrupt in BANK5
   873                           ;!
   874                           ;!    None.
   875                           ;!
   876                           ;!Critical Paths under _main in BANK6
   877                           ;!
   878                           ;!    None.
   879                           ;!
   880                           ;!Critical Paths under _Serial_interrupt in BANK6
   881                           ;!
   882                           ;!    None.
   883                           ;!
   884                           ;!Critical Paths under _main in BANK7
   885                           ;!
   886                           ;!    None.
   887                           ;!
   888                           ;!Critical Paths under _Serial_interrupt in BANK7
   889                           ;!
   890                           ;!    None.
   891                           
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   894 ;;
   895                           
   896                           ;!
   897                           ;!Call Graph Tables:
   898                           ;!
   899                           ;! ---------------------------------------------------------------------------------
   900                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (0) _main                                                 0     0      0      60
   903                           ;!                            _c_touch
   904                           ;!                            _d_touch
   905                           ;!                            _f_touch
   906                           ;!                               _init
   907                           ;! ---------------------------------------------------------------------------------
   908                           ;! (1) _init                                                 0     0      0       0
   909                           ;!                         _inite_UART
   910                           ;! ---------------------------------------------------------------------------------
   911                           ;! (2) _inite_UART                                           0     0      0       0
   912                           ;!                         _SetupClock
   913                           ;! ---------------------------------------------------------------------------------
   914                           ;! (3) _SetupClock                                           0     0      0       0
   915                           ;! ---------------------------------------------------------------------------------
   916                           ;! (1) _f_touch                                              0     0      0      15
   917                           ;!                           _closeADC
   918                           ;!                      _set_LED_ready
   919                           ;! ---------------------------------------------------------------------------------
   920                           ;! (2) _closeADC                                             0     0      0       0
   921                           ;! ---------------------------------------------------------------------------------
   922                           ;! (1) _d_touch                                              0     0      0      15
   923                           ;!                       _configureADC
   924                           ;!                      _set_LED_ready
   925                           ;! ---------------------------------------------------------------------------------
   926                           ;! (2) _set_LED_ready                                        1     1      0      15
   927                           ;!                                              2 COMRAM     1     1      0
   928                           ;! ---------------------------------------------------------------------------------
   929                           ;! (2) _configureADC                                         0     0      0       0
   930                           ;! ---------------------------------------------------------------------------------
   931                           ;! (1) _c_touch                                              0     0      0      30
   932                           ;!                      _get_adc_value
   933                           ;!                    _send_volt_value
   934                           ;! ---------------------------------------------------------------------------------
   935                           ;! (2) _send_volt_value                                      1     1      0      15
   936                           ;!                                              2 COMRAM     1     1      0
   937                           ;! ---------------------------------------------------------------------------------
   938                           ;! (2) _get_adc_value                                        1     1      0      15
   939                           ;!                                              2 COMRAM     1     1      0
   940                           ;! ---------------------------------------------------------------------------------
   941                           ;! Estimated maximum stack depth 3
   942                           ;! ---------------------------------------------------------------------------------
   943                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   944                           ;! ---------------------------------------------------------------------------------
   945                           ;! (4) _Serial_interrupt                                     0     0      0      60
   946                           ;!                              _check
   947                           ;! ---------------------------------------------------------------------------------
   948                           ;! (5) _check                                                1     1      0      60
   949                           ;!                                              1 COMRAM     1     1      0
   950                           ;!                         _write_7seg
   951                           ;! ---------------------------------------------------------------------------------
   952                           ;! (6) _write_7seg                                           1     1      0      15
   953                           ;!                                              0 COMRAM     1     1      0
   954                           ;! ---------------------------------------------------------------------------------
   955                           ;! Estimated maximum stack depth 6
   956                           ;! ---------------------------------------------------------------------------------
   957                           ;!
   958                           ;! Call Graph Graphs:
   959                           ;!
   960                           ;! _main (ROOT)
   961                           ;!   _c_touch
   962                           ;!     _get_adc_value
   963                           ;!     _send_volt_value
   964                           ;!   _d_touch
   965                           ;!     _configureADC
   966                           ;!     _set_LED_ready
   967                           ;!   _f_touch
   968                           ;!     _closeADC
   969                           ;!     _set_LED_ready
   970                           ;!   _init
   971                           ;!     _inite_UART
   972                           ;!       _SetupClock
   973                           ;!
   974                           ;! _Serial_interrupt (ROOT)
   975                           ;!   _check
   976                           ;!     _write_7seg
   977                           ;!
   978                           
   979                           ;! Address spaces:
   980                           
   981                           ;!Name               Size   Autos  Total    Cost      Usage
   982                           ;!BIGRAM             7FF      0       0      21        0.0%
   983                           ;!EEDATA             100      0       0       0        0.0%
   984                           ;!BITBANK7           100      0       0      18        0.0%
   985                           ;!BANK7              100      0       0      19        0.0%
   986                           ;!BITBANK6           100      0       0      16        0.0%
   987                           ;!BANK6              100      0       0      17        0.0%
   988                           ;!BITBANK5           100      0       0      14        0.0%
   989                           ;!BANK5              100      0       0      15        0.0%
   990                           ;!BITBANK4           100      0       0      12        0.0%
   991                           ;!BANK4              100      0       0      13        0.0%
   992                           ;!BITBANK3           100      0       0      10        0.0%
   993                           ;!BANK3              100      0       0      11        0.0%
   994                           ;!BITBANK2           100      0       0       8        0.0%
   995                           ;!BANK2              100      0       0       9        0.0%
   996                           ;!BITBANK1           100      0       0       6        0.0%
   997                           ;!BANK1              100      0      C8       7       78.1%
   998                           ;!BITBANK0            A0      0       0       4        0.0%
   999                           ;!BANK0               A0      0       0       5        0.0%
  1000                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1001                           ;!COMRAM              5E      3      1B       1       28.7%
  1002                           ;!BITSFR               0      0       0     200        0.0%
  1003                           ;!SFR                  0      0       0     200        0.0%
  1004                           ;!STACK                0      0       0       2        0.0%
  1005                           ;!NULL                 0      0       0       0        0.0%
  1006                           ;!ABS                  0      0      E3      20        0.0%
  1007                           ;!DATA                 0      0      E3       3        0.0%
  1008                           ;!CODE                 0      0       0       0        0.0%
  1009                           
  1010                           	global	_main
  1011                           
  1012 ;; *************** function _main *****************
  1013 ;; Defined at:
  1014 ;;		line 186 in file "main_app.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels required when called:    6
  1034 ;; This function calls:
  1035 ;;		_c_touch
  1036 ;;		_d_touch
  1037 ;;		_f_touch
  1038 ;;		_init
  1039 ;; This function is called by:
  1040 ;;		Startup code after reset
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1044                           	file	"main_app.c"
  1045                           	line	186
  1046                           global __ptext0
  1047                           __ptext0:
  1048  0000BA                     psect	text0
  1049                           	file	"main_app.c"
  1050                           	line	186
  1051                           	global	__size_of_main
  1052                           	__size_of_main	equ	__end_of_main-_main
  1053  0000                     	
  1054                           _main:
  1055  0000BA                     ;incstack = 0
  1056                           	opt	stack 25
  1057                           	line	187
  1058                           	
  1059                           l957:
  1060  0000BA                     ;main_app.c: 187:     init();
  1061                           	call	_init	;wreg free
  1062  0000BA  EC20  F001         	line	188
  1063                           	
  1064                           l959:
  1065  0000BE                     ;main_app.c: 188:     TRISDbits.RD0 = 0;
  1066                           	bcf	((c:3989)),c,0	;volatile
  1067  0000BE  9095               	line	189
  1068                           	
  1069                           l961:
  1070  0000C0                     ;main_app.c: 189:     PORTDbits.RD0 = 0;
  1071                           	bcf	((c:3971)),c,0	;volatile
  1072  0000C0  9083               	line	191
  1073                           	
  1074                           l963:
  1075  0000C2                     ;main_app.c: 191:     TRISDbits.RD1 = 0;
  1076                           	bcf	((c:3989)),c,1	;volatile
  1077  0000C2  9295               	line	192
  1078                           	
  1079                           l965:
  1080  0000C4                     ;main_app.c: 192:     PORTDbits.RD1 = 0;
  1081                           	bcf	((c:3971)),c,1	;volatile
  1082  0000C4  9283               	line	194
  1083                           	
  1084                           l967:
  1085  0000C6                     ;main_app.c: 194:     TRISDbits.RD2 = 0;
  1086                           	bcf	((c:3989)),c,2	;volatile
  1087  0000C6  9495               	line	195
  1088                           	
  1089                           l969:
  1090  0000C8                     ;main_app.c: 195:     PORTDbits.RD2 = 0;
  1091                           	bcf	((c:3971)),c,2	;volatile
  1092  0000C8  9483               	line	197
  1093                           	
  1094                           l971:
  1095  0000CA                     ;main_app.c: 197:     TRISDbits.RD3 = 0;
  1096                           	bcf	((c:3989)),c,3	;volatile
  1097  0000CA  9695               	line	198
  1098                           	
  1099                           l973:
  1100  0000CC                     ;main_app.c: 198:     PORTDbits.RD3 = 0;
  1101                           	bcf	((c:3971)),c,3	;volatile
  1102  0000CC  9683               	line	200
  1103                           	
  1104                           l975:
  1105  0000CE                     ;main_app.c: 200:     TRISDbits.RD4 = 0;
  1106                           	bcf	((c:3989)),c,4	;volatile
  1107  0000CE  9895               	line	201
  1108                           	
  1109                           l977:
  1110  0000D0                     ;main_app.c: 201:     PORTDbits.RD4 = 0;
  1111                           	bcf	((c:3971)),c,4	;volatile
  1112  0000D0  9883               	line	203
  1113                           	
  1114                           l979:
  1115  0000D2                     ;main_app.c: 203:     TRISDbits.RD5 = 0;
  1116                           	bcf	((c:3989)),c,5	;volatile
  1117  0000D2  9A95               	line	204
  1118                           	
  1119                           l981:
  1120  0000D4                     ;main_app.c: 204:     PORTDbits.RD5 = 0;
  1121                           	bcf	((c:3971)),c,5	;volatile
  1122  0000D4  9A83               	line	206
  1123                           	
  1124                           l983:
  1125  0000D6                     ;main_app.c: 206:     TRISDbits.RD6 = 0;
  1126                           	bcf	((c:3989)),c,6	;volatile
  1127  0000D6  9C95               	line	207
  1128                           	
  1129                           l985:
  1130  0000D8                     ;main_app.c: 207:     PORTDbits.RD6 = 0;
  1131                           	bcf	((c:3971)),c,6	;volatile
  1132  0000D8  9C83               	line	209
  1133                           	
  1134                           l987:
  1135  0000DA                     ;main_app.c: 209:     TRISDbits.RD7 = 0;
  1136                           	bcf	((c:3989)),c,7	;volatile
  1137  0000DA  9E95               	line	210
  1138                           	
  1139                           l989:
  1140  0000DC                     ;main_app.c: 210:     PORTDbits.RD7 = 0;
  1141                           	bcf	((c:3971)),c,7	;volatile
  1142  0000DC  9E83               	goto	l991
  1143  0000DE  EF71  F000         	line	212
  1144                           ;main_app.c: 212:     while(1){
  1145                           	
  1146                           l139:
  1147  0000E2                     	line	213
  1148                           	
  1149                           l991:
  1150  0000E2                     ;main_app.c: 213:         if (sys_state == 0x64) {
  1151                           		movlw	100
  1152  0000E2  0E64               	xorwf	((c:_sys_state)),c,w
  1153  0000E4  1813               	btfss	status,2
  1154  0000E6  A4D8               	goto	u101
  1155  0000E8  EF78  F000         	goto	u100
  1156  0000EC  EF7A  F000         
  1157                           u101:
  1158  0000F0                     	goto	l991
  1159  0000F0  EF71  F000         u100:
  1160  0000F4                     	line	214
  1161                           	
  1162                           l993:
  1163  0000F4                     ;main_app.c: 214:             d_touch();
  1164                           	call	_d_touch	;wreg free
  1165  0000F4  EC46  F001         	line	215
  1166                           ;main_app.c: 215:             while(sys_state!=0x66) {
  1167                           	goto	l1001
  1168  0000F8  EF8F  F000         	
  1169                           l142:
  1170  0000FC                     	line	216
  1171                           	
  1172                           l995:
  1173  0000FC                     ;main_app.c: 216:                 if (sys_state == 0x63) {
  1174                           		movlw	99
  1175  0000FC  0E63               	xorwf	((c:_sys_state)),c,w
  1176  0000FE  1813               	btfss	status,2
  1177  000100  A4D8               	goto	u111
  1178  000102  EF85  F000         	goto	u110
  1179  000106  EF87  F000         
  1180                           u111:
  1181  00010A                     	goto	l1001
  1182  00010A  EF8F  F000         u110:
  1183  00010E                     	line	217
  1184                           	
  1185                           l997:
  1186  00010E                     ;main_app.c: 217:                     c_touch();
  1187                           	call	_c_touch	;wreg free
  1188  00010E  EC39  F001         	line	218
  1189                           	
  1190                           l999:
  1191  000112                     ;main_app.c: 218:                     sys_state = 0x00;
  1192                           	movlw	low(0)
  1193  000112  0E00               	movwf	((c:_sys_state)),c
  1194  000114  6E13               	goto	l1001
  1195  000116  EF8F  F000         	line	219
  1196                           ;main_app.c: 219:                 }
  1197                           	
  1198                           l143:
  1199  00011A                     	goto	l1001
  1200  00011A  EF8F  F000         	line	220
  1201                           ;main_app.c: 220:             }
  1202                           	
  1203                           l141:
  1204  00011E                     	line	215
  1205                           	
  1206                           l1001:
  1207  00011E                     ;main_app.c: 215:             while(sys_state!=0x66) {
  1208                           		movlw	102
  1209  00011E  0E66               	xorwf	((c:_sys_state)),c,w
  1210  000120  1813               	btfss	status,2
  1211  000122  A4D8               	goto	u121
  1212  000124  EF96  F000         	goto	u120
  1213  000128  EF98  F000         
  1214                           u121:
  1215  00012C                     	goto	l995
  1216  00012C  EF7E  F000         u120:
  1217  000130                     	goto	l1003
  1218  000130  EF9A  F000         	
  1219                           l144:
  1220  000134                     	line	221
  1221                           	
  1222                           l1003:
  1223  000134                     ;main_app.c: 221:             f_touch();
  1224                           	call	_f_touch	;wreg free
  1225  000134  EC40  F001         	line	222
  1226                           	
  1227                           l1005:
  1228  000138                     ;main_app.c: 222:             sys_state = 0x00;
  1229                           	movlw	low(0)
  1230  000138  0E00               	movwf	((c:_sys_state)),c
  1231  00013A  6E13               	goto	l991
  1232  00013C  EF71  F000         	line	223
  1233                           ;main_app.c: 223:         }
  1234                           	
  1235                           l140:
  1236  000140                     	goto	l991
  1237  000140  EF71  F000         	line	224
  1238                           ;main_app.c: 224:     }
  1239                           	
  1240                           l145:
  1241  000144                     	goto	l991
  1242  000144  EF71  F000         	
  1243                           l146:
  1244  000148                     	line	225
  1245                           	
  1246                           l147:
  1247  000148                     	global	start
  1248                           	goto	start
  1249  000148  EF07  F000         	opt stack 0
  1250                           GLOBAL	__end_of_main
  1251                           	__end_of_main:
  1252  00014C                     	signat	_main,89
  1253                           	global	_init
  1254                           
  1255 ;; *************** function _init *****************
  1256 ;; Defined at:
  1257 ;;		line 117 in file "main_app.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    5
  1278 ;; This function calls:
  1279 ;;		_inite_UART
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1285                           	line	117
  1286                           global __ptext1
  1287                           __ptext1:
  1288  000240                     psect	text1
  1289                           	file	"main_app.c"
  1290                           	line	117
  1291                           	global	__size_of_init
  1292                           	__size_of_init	equ	__end_of_init-_init
  1293  0000                     	
  1294                           _init:
  1295  000240                     ;incstack = 0
  1296                           	opt	stack 25
  1297                           	line	119
  1298                           	
  1299                           l931:
  1300  000240                     ;main_app.c: 119:     TMR0L = 0xFF;
  1301                           	setf	((c:4054)),c	;volatile
  1302  000240  68D6               	line	120
  1303                           ;main_app.c: 120:     TMR0H = 0xFF;
  1304                           	setf	((c:4055)),c	;volatile
  1305  000242  68D7               	line	121
  1306                           	
  1307                           l933:
  1308  000244                     ;main_app.c: 121:     T0CON = 0x05;
  1309                           	movlw	low(05h)
  1310  000244  0E05               	movwf	((c:4053)),c	;volatile
  1311  000246  6ED5               	line	122
  1312                           	
  1313                           l935:
  1314  000248                     ;main_app.c: 122:     T0CONbits.TMR0ON=1;
  1315                           	bsf	((c:4053)),c,7	;volatile
  1316  000248  8ED5               	line	124
  1317                           	
  1318                           l937:
  1319  00024A                     ;main_app.c: 124:     TRISCbits.RC1 = 0;
  1320                           	bcf	((c:3988)),c,1	;volatile
  1321  00024A  9294               	line	125
  1322                           	
  1323                           l939:
  1324  00024C                     ;main_app.c: 125:     PORTCbits.RC1 = 0;
  1325                           	bcf	((c:3970)),c,1	;volatile
  1326  00024C  9282               	line	127
  1327                           	
  1328                           l941:
  1329  00024E                     ;main_app.c: 127:     inite_UART();
  1330                           	call	_inite_UART	;wreg free
  1331  00024E  ECC7  F000         	line	128
  1332                           	
  1333                           l101:
  1334  000252                     	return	;funcret
  1335  000252  0012               	opt stack 0
  1336                           GLOBAL	__end_of_init
  1337                           	__end_of_init:
  1338  000254                     	signat	_init,89
  1339                           	global	_inite_UART
  1340                           
  1341 ;; *************** function _inite_UART *****************
  1342 ;; Defined at:
  1343 ;;		line 55 in file "main_app.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    4
  1364 ;; This function calls:
  1365 ;;		_SetupClock
  1366 ;; This function is called by:
  1367 ;;		_init
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1371                           	line	55
  1372                           global __ptext2
  1373                           __ptext2:
  1374  00018E                     psect	text2
  1375                           	file	"main_app.c"
  1376                           	line	55
  1377                           	global	__size_of_inite_UART
  1378                           	__size_of_inite_UART	equ	__end_of_inite_UART-_inite_UART
  1379  0000                     	
  1380                           _inite_UART:
  1381  00018E                     ;incstack = 0
  1382                           	opt	stack 25
  1383                           	line	56
  1384                           	
  1385                           l825:
  1386  00018E                     ;main_app.c: 56:     SetupClock();
  1387                           	call	_SetupClock	;wreg free
  1388  00018E  EC4C  F001         	line	59
  1389                           	
  1390                           l827:
  1391  000192                     ;main_app.c: 59:     TRISCbits.RC6 = 0;
  1392                           	bcf	((c:3988)),c,6	;volatile
  1393  000192  9C94               	line	61
  1394                           	
  1395                           l829:
  1396  000194                     ;main_app.c: 61:     TRISCbits.RC7 = 1;
  1397                           	bsf	((c:3988)),c,7	;volatile
  1398  000194  8E94               	line	63
  1399                           	
  1400                           l831:
  1401  000196                     ;main_app.c: 63:     SPBRG = 64;
  1402                           	movlw	low(040h)
  1403  000196  0E40               	movwf	((c:4015)),c	;volatile
  1404  000198  6EAF               	line	64
  1405                           	
  1406                           l833:
  1407  00019A                     ;main_app.c: 64:     BAUDCONbits.TXCKP = 0;
  1408                           	bcf	((c:4024)),c,4	;volatile
  1409  00019A  98B8               	line	65
  1410                           	
  1411                           l835:
  1412  00019C                     ;main_app.c: 65:     BAUDCONbits.RXDTP = 0;
  1413                           	bcf	((c:4024)),c,5	;volatile
  1414  00019C  9AB8               	line	67
  1415                           	
  1416                           l837:
  1417  00019E                     ;main_app.c: 67:     TXSTAbits.TX9 = 0;
  1418                           	bcf	((c:4012)),c,6	;volatile
  1419  00019E  9CAC               	line	68
  1420                           	
  1421                           l839:
  1422  0001A0                     ;main_app.c: 68:     TXSTAbits.TXEN = 1;
  1423                           	bsf	((c:4012)),c,5	;volatile
  1424  0001A0  8AAC               	line	69
  1425                           	
  1426                           l841:
  1427  0001A2                     ;main_app.c: 69:     TXSTAbits.SYNC = 0;
  1428                           	bcf	((c:4012)),c,4	;volatile
  1429  0001A2  98AC               	line	70
  1430                           	
  1431                           l843:
  1432  0001A4                     ;main_app.c: 70:     TXSTAbits.SENDB = 0;
  1433                           	bcf	((c:4012)),c,3	;volatile
  1434  0001A4  96AC               	line	71
  1435                           	
  1436                           l845:
  1437  0001A6                     ;main_app.c: 71:     TXSTAbits.BRGH = 1;
  1438                           	bsf	((c:4012)),c,2	;volatile
  1439  0001A6  84AC               	line	72
  1440                           	
  1441                           l847:
  1442  0001A8                     ;main_app.c: 72:     TXSTAbits.TX9D = 0;
  1443                           	bcf	((c:4012)),c,0	;volatile
  1444  0001A8  90AC               	line	74
  1445                           	
  1446                           l849:
  1447  0001AA                     ;main_app.c: 74:     RCSTAbits.SPEN = 1;
  1448                           	bsf	((c:4011)),c,7	;volatile
  1449  0001AA  8EAB               	line	75
  1450                           	
  1451                           l851:
  1452  0001AC                     ;main_app.c: 75:     RCSTAbits.RX9 = 0;
  1453                           	bcf	((c:4011)),c,6	;volatile
  1454  0001AC  9CAB               	line	76
  1455                           	
  1456                           l853:
  1457  0001AE                     ;main_app.c: 76:     RCSTAbits.CREN = 1;
  1458                           	bsf	((c:4011)),c,4	;volatile
  1459  0001AE  88AB               	line	77
  1460                           	
  1461                           l855:
  1462  0001B0                     ;main_app.c: 77:     RCSTAbits.ADDEN = 0;
  1463                           	bcf	((c:4011)),c,3	;volatile
  1464  0001B0  96AB               	line	78
  1465                           	
  1466                           l857:
  1467  0001B2                     ;main_app.c: 78:     RCSTAbits.RX9D = 0;
  1468                           	bcf	((c:4011)),c,0	;volatile
  1469  0001B2  90AB               	line	80
  1470                           	
  1471                           l859:
  1472  0001B4                     ;main_app.c: 80:     INTCONbits.GIE = 1;
  1473                           	bsf	((c:4082)),c,7	;volatile
  1474  0001B4  8EF2               	line	81
  1475                           	
  1476                           l861:
  1477  0001B6                     ;main_app.c: 81:     INTCONbits.PEIE = 1;
  1478                           	bsf	((c:4082)),c,6	;volatile
  1479  0001B6  8CF2               	line	82
  1480                           	
  1481                           l863:
  1482  0001B8                     ;main_app.c: 82:     PIE1bits.RCIE = 1;
  1483                           	bsf	((c:3997)),c,5	;volatile
  1484  0001B8  8A9D               	line	83
  1485                           	
  1486                           l865:
  1487  0001BA                     ;main_app.c: 83:     PIE1bits.TXIE = 0;
  1488                           	bcf	((c:3997)),c,4	;volatile
  1489  0001BA  989D               	line	85
  1490                           	
  1491                           l80:
  1492  0001BC                     	return	;funcret
  1493  0001BC  0012               	opt stack 0
  1494                           GLOBAL	__end_of_inite_UART
  1495                           	__end_of_inite_UART:
  1496  0001BE                     	signat	_inite_UART,89
  1497                           	global	_SetupClock
  1498                           
  1499 ;; *************** function _SetupClock *****************
  1500 ;; Defined at:
  1501 ;;		line 49 in file "main_app.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		None
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1515 ;;      Params:         0       0       0       0       0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    3
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_inite_UART
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1529                           	line	49
  1530                           global __ptext3
  1531                           __ptext3:
  1532  000298                     psect	text3
  1533                           	file	"main_app.c"
  1534                           	line	49
  1535                           	global	__size_of_SetupClock
  1536                           	__size_of_SetupClock	equ	__end_of_SetupClock-_SetupClock
  1537  0000                     	
  1538                           _SetupClock:
  1539  000298                     ;incstack = 0
  1540                           	opt	stack 25
  1541                           	line	50
  1542                           	
  1543                           l823:
  1544  000298                     ;main_app.c: 50:     OSCCONbits.IRCF0 = 1;
  1545                           	bsf	((c:4051)),c,4	;volatile
  1546  000298  88D3               	line	51
  1547                           ;main_app.c: 51:     OSCCONbits.IRCF1 = 1;
  1548                           	bsf	((c:4051)),c,5	;volatile
  1549  00029A  8AD3               	line	52
  1550                           ;main_app.c: 52:     OSCCONbits.IRCF2 = 1;
  1551                           	bsf	((c:4051)),c,6	;volatile
  1552  00029C  8CD3               	line	53
  1553                           	
  1554                           l77:
  1555  00029E                     	return	;funcret
  1556  00029E  0012               	opt stack 0
  1557                           GLOBAL	__end_of_SetupClock
  1558                           	__end_of_SetupClock:
  1559  0002A0                     	signat	_SetupClock,89
  1560                           	global	_f_touch
  1561                           
  1562 ;; *************** function _f_touch *****************
  1563 ;; Defined at:
  1564 ;;		line 176 in file "main_app.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    4
  1585 ;; This function calls:
  1586 ;;		_closeADC
  1587 ;;		_set_LED_ready
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1593                           	line	176
  1594                           global __ptext4
  1595                           __ptext4:
  1596  000280                     psect	text4
  1597                           	file	"main_app.c"
  1598                           	line	176
  1599                           	global	__size_of_f_touch
  1600                           	__size_of_f_touch	equ	__end_of_f_touch-_f_touch
  1601  0000                     	
  1602                           _f_touch:
  1603  000280                     ;incstack = 0
  1604                           	opt	stack 26
  1605                           	line	177
  1606                           	
  1607                           l947:
  1608  000280                     ;main_app.c: 177:     closeADC();
  1609                           	call	_closeADC	;wreg free
  1610  000280  EC54  F001         	line	178
  1611                           	
  1612                           l949:
  1613  000284                     ;main_app.c: 178:     set_LED_ready(0);
  1614                           	movlw	(0)&0ffh
  1615  000284  0E00               	
  1616                           	call	_set_LED_ready
  1617  000286  EC32  F001         	line	179
  1618                           	
  1619                           l131:
  1620  00028A                     	return	;funcret
  1621  00028A  0012               	opt stack 0
  1622                           GLOBAL	__end_of_f_touch
  1623                           	__end_of_f_touch:
  1624  00028C                     	signat	_f_touch,89
  1625                           	global	_closeADC
  1626                           
  1627 ;; *************** function _closeADC *****************
  1628 ;; Defined at:
  1629 ;;		line 149 in file "main_app.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		None
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    3
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_f_touch
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1657                           	line	149
  1658                           global __ptext5
  1659                           __ptext5:
  1660  0002A8                     psect	text5
  1661                           	file	"main_app.c"
  1662                           	line	149
  1663                           	global	__size_of_closeADC
  1664                           	__size_of_closeADC	equ	__end_of_closeADC-_closeADC
  1665  0000                     	
  1666                           _closeADC:
  1667  0002A8                     ;incstack = 0
  1668                           	opt	stack 26
  1669                           	line	150
  1670                           	
  1671                           l877:
  1672  0002A8                     ;main_app.c: 150:     ADCON0bits.ADON = 0;
  1673                           	bcf	((c:4034)),c,0	;volatile
  1674  0002A8  90C2               	line	151
  1675                           	
  1676                           l110:
  1677  0002AA                     	return	;funcret
  1678  0002AA  0012               	opt stack 0
  1679                           GLOBAL	__end_of_closeADC
  1680                           	__end_of_closeADC:
  1681  0002AC                     	signat	_closeADC,89
  1682                           	global	_d_touch
  1683                           
  1684 ;; *************** function _d_touch *****************
  1685 ;; Defined at:
  1686 ;;		line 171 in file "main_app.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		_configureADC
  1709 ;;		_set_LED_ready
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1715                           	line	171
  1716                           global __ptext6
  1717                           __ptext6:
  1718  00028C                     psect	text6
  1719                           	file	"main_app.c"
  1720                           	line	171
  1721                           	global	__size_of_d_touch
  1722                           	__size_of_d_touch	equ	__end_of_d_touch-_d_touch
  1723  0000                     	
  1724                           _d_touch:
  1725  00028C                     ;incstack = 0
  1726                           	opt	stack 26
  1727                           	line	172
  1728                           	
  1729                           l943:
  1730  00028C                     ;main_app.c: 172:     configureADC();
  1731                           	call	_configureADC	;wreg free
  1732  00028C  ECF1  F000         	line	173
  1733                           	
  1734                           l945:
  1735  000290                     ;main_app.c: 173:     set_LED_ready(1);
  1736                           	movlw	(01h)&0ffh
  1737  000290  0E01               	
  1738                           	call	_set_LED_ready
  1739  000292  EC32  F001         	line	174
  1740                           	
  1741                           l128:
  1742  000296                     	return	;funcret
  1743  000296  0012               	opt stack 0
  1744                           GLOBAL	__end_of_d_touch
  1745                           	__end_of_d_touch:
  1746  000298                     	signat	_d_touch,89
  1747                           	global	_set_LED_ready
  1748                           
  1749 ;; *************** function _set_LED_ready *****************
  1750 ;; Defined at:
  1751 ;;		line 153 in file "main_app.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  state           1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  state           1    2[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    3
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_d_touch
  1776 ;;		_f_touch
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           psect	text7,class=CODE,space=0,reloc=2,group=0
  1780                           	line	153
  1781                           global __ptext7
  1782                           __ptext7:
  1783  000264                     psect	text7
  1784                           	file	"main_app.c"
  1785                           	line	153
  1786                           	global	__size_of_set_LED_ready
  1787                           	__size_of_set_LED_ready	equ	__end_of_set_LED_ready-_set_LED_ready
  1788  0000                     	
  1789                           _set_LED_ready:
  1790  000264                     ;incstack = 0
  1791                           	opt	stack 26
  1792                           ;set_LED_ready@state stored from wreg
  1793                           	movwf	((c:set_LED_ready@state)),c
  1794  000264  6E1B               	line	154
  1795                           	
  1796                           l879:
  1797  000266                     ;main_app.c: 154:     LATCbits.LATC1 = state;
  1798                           	btfsc	(c:set_LED_ready@state),c,0
  1799  000266  B01B               	bra	u15
  1800  000268  D002               	bcf	((c:3979)),c,1	;volatile
  1801  00026A  928B               	bra	u16
  1802  00026C  D001               	u15:
  1803  00026E                     	bsf	((c:3979)),c,1	;volatile
  1804  00026E  828B               	u16:
  1805  000270                     
  1806                           	line	155
  1807                           	
  1808                           l113:
  1809  000270                     	return	;funcret
  1810  000270  0012               	opt stack 0
  1811                           GLOBAL	__end_of_set_LED_ready
  1812                           	__end_of_set_LED_ready:
  1813  000272                     	signat	_set_LED_ready,4217
  1814                           	global	_configureADC
  1815                           
  1816 ;; *************** function _configureADC *****************
  1817 ;; Defined at:
  1818 ;;		line 134 in file "main_app.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    3
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_d_touch
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           psect	text8,class=CODE,space=0,reloc=2,group=0
  1846                           	line	134
  1847                           global __ptext8
  1848                           __ptext8:
  1849  0001E2                     psect	text8
  1850                           	file	"main_app.c"
  1851                           	line	134
  1852                           	global	__size_of_configureADC
  1853                           	__size_of_configureADC	equ	__end_of_configureADC-_configureADC
  1854  0000                     	
  1855                           _configureADC:
  1856  0001E2                     ;incstack = 0
  1857                           	opt	stack 26
  1858                           	line	136
  1859                           	
  1860                           l869:
  1861  0001E2                     ;main_app.c: 136:     ADCON1bits.PCFG = 0b1101;
  1862                           	movf	((c:4033)),c,w	;volatile
  1863  0001E2  50C1               	andlw	not (((1<<4)-1)<<0)
  1864  0001E4  0BF0               	iorlw	(0Dh & ((1<<4)-1))<<0
  1865  0001E6  090D               	movwf	((c:4033)),c	;volatile
  1866  0001E8  6EC1               	line	137
  1867                           	
  1868                           l871:
  1869  0001EA                     ;main_app.c: 137:     ADCON0bits.CHS0 = 1;
  1870                           	bsf	((c:4034)),c,2	;volatile
  1871  0001EA  84C2               	line	139
  1872                           	
  1873                           l873:
  1874  0001EC                     ;main_app.c: 139:     ADCON2bits.ADFM = 0;
  1875                           	bcf	((c:4032)),c,7	;volatile
  1876  0001EC  9EC0               	line	140
  1877                           ;main_app.c: 140:     ADCON2bits.ACQT = 0x6;
  1878                           	movf	((c:4032)),c,w	;volatile
  1879  0001EE  50C0               	andlw	not (((1<<3)-1)<<3)
  1880  0001F0  0BC7               	iorlw	(06h & ((1<<3)-1))<<3
  1881  0001F2  0930               	movwf	((c:4032)),c	;volatile
  1882  0001F4  6EC0               	line	141
  1883                           ;main_app.c: 141:     ADCON2bits.ADCS = 0x2;
  1884                           	movf	((c:4032)),c,w	;volatile
  1885  0001F6  50C0               	andlw	not (((1<<3)-1)<<0)
  1886  0001F8  0BF8               	iorlw	(02h & ((1<<3)-1))<<0
  1887  0001FA  0902               	movwf	((c:4032)),c	;volatile
  1888  0001FC  6EC0               	line	143
  1889                           	
  1890                           l875:
  1891  0001FE                     ;main_app.c: 143:     ADCON0bits.ADON = 1;
  1892                           	bsf	((c:4034)),c,0	;volatile
  1893  0001FE  80C2               	line	147
  1894                           	
  1895                           l107:
  1896  000200                     	return	;funcret
  1897  000200  0012               	opt stack 0
  1898                           GLOBAL	__end_of_configureADC
  1899                           	__end_of_configureADC:
  1900  000202                     	signat	_configureADC,89
  1901                           	global	_c_touch
  1902                           
  1903 ;; *************** function _c_touch *****************
  1904 ;; Defined at:
  1905 ;;		line 181 in file "main_app.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		_get_adc_value
  1928 ;;		_send_volt_value
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           psect	text9,class=CODE,space=0,reloc=2,group=0
  1934                           	line	181
  1935                           global __ptext9
  1936                           __ptext9:
  1937  000272                     psect	text9
  1938                           	file	"main_app.c"
  1939                           	line	181
  1940                           	global	__size_of_c_touch
  1941                           	__size_of_c_touch	equ	__end_of_c_touch-_c_touch
  1942  0000                     	
  1943                           _c_touch:
  1944  000272                     ;incstack = 0
  1945                           	opt	stack 26
  1946                           	line	182
  1947                           	
  1948                           l951:
  1949  000272                     ;main_app.c: 182:     adc_value = get_adc_value();
  1950                           	call	_get_adc_value	;wreg free
  1951  000272  EC01  F001         	movwf	((c:_adc_value)),c
  1952  000276  6E18               	line	183
  1953                           ;main_app.c: 183:     send_volt_value(adc_value);
  1954                           	movf	((c:_adc_value)),c,w
  1955  000278  5018               	
  1956                           	call	_send_volt_value
  1957  00027A  EC11  F001         	line	184
  1958                           	
  1959                           l134:
  1960  00027E                     	return	;funcret
  1961  00027E  0012               	opt stack 0
  1962                           GLOBAL	__end_of_c_touch
  1963                           	__end_of_c_touch:
  1964  000280                     	signat	_c_touch,89
  1965                           	global	_send_volt_value
  1966                           
  1967 ;; *************** function _send_volt_value *****************
  1968 ;; Defined at:
  1969 ;;		line 166 in file "main_app.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  voltage         1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  voltage         1    2[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    3
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_c_touch
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           psect	text10,class=CODE,space=0,reloc=2,group=0
  1997                           	line	166
  1998                           global __ptext10
  1999                           __ptext10:
  2000  000222                     psect	text10
  2001                           	file	"main_app.c"
  2002                           	line	166
  2003                           	global	__size_of_send_volt_value
  2004                           	__size_of_send_volt_value	equ	__end_of_send_volt_value-_send_volt_value
  2005  0000                     	
  2006                           _send_volt_value:
  2007  000222                     ;incstack = 0
  2008                           	opt	stack 26
  2009                           ;send_volt_value@voltage stored from wreg
  2010                           	movwf	((c:send_volt_value@voltage)),c
  2011  000222  6E1B               	line	167
  2012                           	
  2013                           l887:
  2014  000224                     ;main_app.c: 167:     while(TXIF==0);
  2015                           	goto	l122
  2016  000224  EF14  F001         	
  2017                           l123:
  2018  000228                     	
  2019                           l122:
  2020  000228                     	btfss	c:(31988/8),(31988)&7	;volatile
  2021  000228  A89E               	goto	u31
  2022  00022A  EF19  F001         	goto	u30
  2023  00022E  EF1B  F001         u31:
  2024  000232                     	goto	l122
  2025  000232  EF14  F001         u30:
  2026  000236                     	goto	l889
  2027  000236  EF1D  F001         	
  2028                           l124:
  2029  00023A                     	line	168
  2030                           	
  2031                           l889:
  2032  00023A                     ;main_app.c: 168:     TXREG = voltage;
  2033                           	movff	(c:send_volt_value@voltage),(c:4013)	;volatile
  2034  00023A  C01B  FFAD         	line	169
  2035                           	
  2036                           l125:
  2037  00023E                     	return	;funcret
  2038  00023E  0012               	opt stack 0
  2039                           GLOBAL	__end_of_send_volt_value
  2040                           	__end_of_send_volt_value:
  2041  000240                     	signat	_send_volt_value,4217
  2042                           	global	_get_adc_value
  2043                           
  2044 ;; *************** function _get_adc_value *****************
  2045 ;; Defined at:
  2046 ;;		line 157 in file "main_app.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  digi            1    2[COMRAM] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      unsigned char 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0
  2061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2064 ;;Total ram usage:        1 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    3
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_c_touch
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2074                           	line	157
  2075                           global __ptext11
  2076                           __ptext11:
  2077  000202                     psect	text11
  2078                           	file	"main_app.c"
  2079                           	line	157
  2080                           	global	__size_of_get_adc_value
  2081                           	__size_of_get_adc_value	equ	__end_of_get_adc_value-_get_adc_value
  2082  0000                     	
  2083                           _get_adc_value:
  2084  000202                     ;incstack = 0
  2085                           	opt	stack 26
  2086                           	line	160
  2087                           	
  2088                           l881:
  2089  000202                     ;main_app.c: 158:     char digi;;main_app.c: 160:     ADCON0bits.GO_DONE = 1;
  2090                           	bsf	((c:4034)),c,1	;volatile
  2091  000202  82C2               	line	161
  2092                           ;main_app.c: 161:     while(ADCON0bits.GO_DONE==1);
  2093                           	goto	l116
  2094  000204  EF04  F001         	
  2095                           l117:
  2096  000208                     	
  2097                           l116:
  2098  000208                     	btfsc	((c:4034)),c,1	;volatile
  2099  000208  B2C2               	goto	u21
  2100  00020A  EF09  F001         	goto	u20
  2101  00020E  EF0B  F001         u21:
  2102  000212                     	goto	l116
  2103  000212  EF04  F001         u20:
  2104  000216                     	
  2105                           l118:
  2106  000216                     	line	162
  2107                           ;main_app.c: 162:     digi = ADRESH;
  2108                           	movff	(c:4036),(c:get_adc_value@digi)	;volatile
  2109  000216  CFC4 F01B          	line	163
  2110                           	
  2111                           l883:
  2112  00021A                     ;main_app.c: 163:     return digi;
  2113                           	movf	((c:get_adc_value@digi)),c,w
  2114  00021A  501B               	goto	l119
  2115  00021C  EF10  F001         	
  2116                           l885:
  2117  000220                     	line	164
  2118                           	
  2119                           l119:
  2120  000220                     	return	;funcret
  2121  000220  0012               	opt stack 0
  2122                           GLOBAL	__end_of_get_adc_value
  2123                           	__end_of_get_adc_value:
  2124  000222                     	signat	_get_adc_value,89
  2125                           	global	_Serial_interrupt
  2126                           
  2127 ;; *************** function _Serial_interrupt *****************
  2128 ;; Defined at:
  2129 ;;		line 111 in file "main_app.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		_check
  2152 ;; This function is called by:
  2153 ;;		Interrupt level 2
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           psect	intcode,class=CODE,space=0,reloc=2
  2157                           global __pintcode
  2158                           __pintcode:
  2159  000008                     psect	intcode
  2160                           	file	"main_app.c"
  2161                           	line	111
  2162                           	global	__size_of_Serial_interrupt
  2163                           	__size_of_Serial_interrupt	equ	__end_of_Serial_interrupt-_Serial_interrupt
  2164  0000                     	
  2165                           _Serial_interrupt:
  2166  000008                     ;incstack = 0
  2167                           	opt	stack 25
  2168                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  2169  000008  821C               	global	int_func
  2170                           	call	int_func,f	;refresh shadow registers
  2171  00000A  EDDF  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  2172                           global __pintcode_body
  2173                           __pintcode_body:
  2174  0001BE                     int_func:
  2175  0001BE                     
  2176                           	pop	; remove dummy address from shadow register refresh
  2177  0001BE  0006               	line	112
  2178                           	
  2179                           i2l953:
  2180  0001C0                     ;main_app.c: 112:     while(RCIF == 0);
  2181                           	goto	i2l95
  2182  0001C0  EFE2  F000         	
  2183                           i2l96:
  2184  0001C4                     	
  2185                           i2l95:
  2186  0001C4                     	btfss	c:(31989/8),(31989)&7	;volatile
  2187  0001C4  AA9E               	goto	i2u9_41
  2188  0001C6  EFE7  F000         	goto	i2u9_40
  2189  0001CA  EFE9  F000         i2u9_41:
  2190  0001CE                     	goto	i2l95
  2191  0001CE  EFE2  F000         i2u9_40:
  2192  0001D2                     	
  2193                           i2l97:
  2194  0001D2                     	line	113
  2195                           ;main_app.c: 113:     out = RCREG;
  2196                           	movff	(c:4014),(c:_out)	;volatile
  2197  0001D2  CFAE F014          	line	114
  2198                           	
  2199                           i2l955:
  2200  0001D6                     ;main_app.c: 114:     sys_state = check(out);
  2201                           	movf	((c:_out)),c,w
  2202  0001D6  5014               	
  2203                           	call	_check
  2204  0001D8  EC09  F000         	movwf	((c:_sys_state)),c
  2205  0001DC  6E13               	line	115
  2206                           	
  2207                           i2l98:
  2208  0001DE                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2209  0001DE  921C               	retfie f
  2210  0001E0  0011               	opt stack 0
  2211                           GLOBAL	__end_of_Serial_interrupt
  2212                           	__end_of_Serial_interrupt:
  2213  0001E2                     	signat	_Serial_interrupt,89
  2214                           	global	_check
  2215                           
  2216 ;; *************** function _check *****************
  2217 ;; Defined at:
  2218 ;;		line 87 in file "main_app.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  input           1    wreg     unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  input           1    1[COMRAM] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      unsigned char 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0
  2233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		_write_7seg
  2241 ;; This function is called by:
  2242 ;;		_Serial_interrupt
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           psect	text13,class=CODE,space=0,reloc=2,group=0
  2246                           	line	87
  2247                           global __ptext13
  2248                           __ptext13:
  2249  000012                     psect	text13
  2250                           	file	"main_app.c"
  2251                           	line	87
  2252                           	global	__size_of_check
  2253                           	__size_of_check	equ	__end_of_check-_check
  2254  0000                     	
  2255                           _check:
  2256  000012                     ;incstack = 0
  2257                           	opt	stack 25
  2258                           ;check@input stored from wreg
  2259                           	movwf	((c:check@input)),c
  2260  000012  6E1A               	line	88
  2261                           	
  2262                           i2l891:
  2263  000014                     ;main_app.c: 88:     if(RCSTAbits.FERR == 1 || RCSTAbits.OERR == 1){
  2264                           	btfsc	((c:4011)),c,2	;volatile
  2265  000014  B4AB               	goto	i2u4_41
  2266  000016  EF0F  F000         	goto	i2u4_40
  2267  00001A  EF11  F000         i2u4_41:
  2268  00001E                     	goto	i2l895
  2269  00001E  EF1A  F000         i2u4_40:
  2270  000022                     	
  2271                           i2l893:
  2272  000022                     	btfss	((c:4011)),c,1	;volatile
  2273  000022  A2AB               	goto	i2u5_41
  2274  000024  EF16  F000         	goto	i2u5_40
  2275  000028  EF18  F000         i2u5_41:
  2276  00002C                     	goto	i2l901
  2277  00002C  EF22  F000         i2u5_40:
  2278  000030                     	goto	i2l895
  2279  000030  EF1A  F000         	
  2280                           i2l85:
  2281  000034                     	line	89
  2282                           	
  2283                           i2l895:
  2284  000034                     ;main_app.c: 89:         write_7seg(0x79);
  2285                           	movlw	(079h)&0ffh
  2286  000034  0E79               	
  2287                           	call	_write_7seg
  2288  000036  EC50  F001         	line	91
  2289                           	
  2290                           i2l897:
  2291  00003A                     ;main_app.c: 91:         return 0x65;
  2292                           	movlw	(065h)&0ffh
  2293  00003A  0E65               	goto	i2l86
  2294  00003C  EF5C  F000         	
  2295                           i2l899:
  2296  000040                     	goto	i2l86
  2297  000040  EF5C  F000         	line	92
  2298                           ;main_app.c: 92:     }
  2299                           	
  2300                           i2l83:
  2301  000044                     	line	93
  2302                           	
  2303                           i2l901:
  2304  000044                     ;main_app.c: 93:     if (input == 0x64) {
  2305                           		movlw	100
  2306  000044  0E64               	xorwf	((c:check@input)),c,w
  2307  000046  181A               	btfss	status,2
  2308  000048  A4D8               	goto	i2u6_41
  2309  00004A  EF29  F000         	goto	i2u6_40
  2310  00004E  EF2B  F000         
  2311                           i2u6_41:
  2312  000052                     	goto	i2l909
  2313  000052  EF33  F000         i2u6_40:
  2314  000056                     	line	94
  2315                           	
  2316                           i2l903:
  2317  000056                     ;main_app.c: 94:         write_7seg(0x5E);
  2318                           	movlw	(05Eh)&0ffh
  2319  000056  0E5E               	
  2320                           	call	_write_7seg
  2321  000058  EC50  F001         	line	95
  2322                           	
  2323                           i2l905:
  2324  00005C                     ;main_app.c: 95:         return 0x64;
  2325                           	movlw	(064h)&0ffh
  2326  00005C  0E64               	goto	i2l86
  2327  00005E  EF5C  F000         	
  2328                           i2l907:
  2329  000062                     	goto	i2l86
  2330  000062  EF5C  F000         	line	96
  2331                           ;main_app.c: 96:     }
  2332                           	
  2333                           i2l87:
  2334  000066                     	line	97
  2335                           	
  2336                           i2l909:
  2337  000066                     ;main_app.c: 97:     if (input == 0x63) {
  2338                           		movlw	99
  2339  000066  0E63               	xorwf	((c:check@input)),c,w
  2340  000068  181A               	btfss	status,2
  2341  00006A  A4D8               	goto	i2u7_41
  2342  00006C  EF3A  F000         	goto	i2u7_40
  2343  000070  EF3C  F000         
  2344                           i2u7_41:
  2345  000074                     	goto	i2l917
  2346  000074  EF44  F000         i2u7_40:
  2347  000078                     	line	98
  2348                           	
  2349                           i2l911:
  2350  000078                     ;main_app.c: 98:         write_7seg(0x39);
  2351                           	movlw	(039h)&0ffh
  2352  000078  0E39               	
  2353                           	call	_write_7seg
  2354  00007A  EC50  F001         	line	99
  2355                           	
  2356                           i2l913:
  2357  00007E                     ;main_app.c: 99:         return 0x63;
  2358                           	movlw	(063h)&0ffh
  2359  00007E  0E63               	goto	i2l86
  2360  000080  EF5C  F000         	
  2361                           i2l915:
  2362  000084                     	goto	i2l86
  2363  000084  EF5C  F000         	line	100
  2364                           ;main_app.c: 100:     }
  2365                           	
  2366                           i2l88:
  2367  000088                     	line	101
  2368                           	
  2369                           i2l917:
  2370  000088                     ;main_app.c: 101:     if (input == 0x66) {
  2371                           		movlw	102
  2372  000088  0E66               	xorwf	((c:check@input)),c,w
  2373  00008A  181A               	btfss	status,2
  2374  00008C  A4D8               	goto	i2u8_41
  2375  00008E  EF4B  F000         	goto	i2u8_40
  2376  000092  EF4D  F000         
  2377                           i2u8_41:
  2378  000096                     	goto	i2l927
  2379  000096  EF57  F000         i2u8_40:
  2380  00009A                     	line	102
  2381                           	
  2382                           i2l919:
  2383  00009A                     ;main_app.c: 102:         write_7seg(0x71);
  2384                           	movlw	(071h)&0ffh
  2385  00009A  0E71               	
  2386                           	call	_write_7seg
  2387  00009C  EC50  F001         	line	103
  2388                           	
  2389                           i2l921:
  2390  0000A0                     ;main_app.c: 103:         return 0x66;
  2391                           	movlw	(066h)&0ffh
  2392  0000A0  0E66               	goto	i2l86
  2393  0000A2  EF5C  F000         	
  2394                           i2l923:
  2395  0000A6                     	goto	i2l86
  2396  0000A6  EF5C  F000         	line	104
  2397                           	
  2398                           i2l925:
  2399  0000AA                     ;main_app.c: 104:     }
  2400                           	goto	i2l86
  2401  0000AA  EF5C  F000         	line	105
  2402                           ;main_app.c: 105:     else{
  2403                           	
  2404                           i2l89:
  2405  0000AE                     	line	107
  2406                           	
  2407                           i2l927:
  2408  0000AE                     ;main_app.c: 107:         return 0x75;
  2409                           	movlw	(075h)&0ffh
  2410  0000AE  0E75               	goto	i2l86
  2411  0000B0  EF5C  F000         	
  2412                           i2l929:
  2413  0000B4                     	goto	i2l86
  2414  0000B4  EF5C  F000         	line	108
  2415                           ;main_app.c: 108:     }
  2416                           	
  2417                           i2l90:
  2418  0000B8                     	line	109
  2419                           	
  2420                           i2l86:
  2421  0000B8                     	return	;funcret
  2422  0000B8  0012               	opt stack 0
  2423                           GLOBAL	__end_of_check
  2424                           	__end_of_check:
  2425  0000BA                     	signat	_check,4217
  2426                           	global	_write_7seg
  2427                           
  2428 ;; *************** function _write_7seg *****************
  2429 ;; Defined at:
  2430 ;;		line 130 in file "main_app.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  c               1    wreg     unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  c               1    0[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        1 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_check
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           psect	text14,class=CODE,space=0,reloc=2,group=0
  2457                           	line	130
  2458                           global __ptext14
  2459                           __ptext14:
  2460  0002A0                     psect	text14
  2461                           	file	"main_app.c"
  2462                           	line	130
  2463                           	global	__size_of_write_7seg
  2464                           	__size_of_write_7seg	equ	__end_of_write_7seg-_write_7seg
  2465  0000                     	
  2466                           _write_7seg:
  2467  0002A0                     ;incstack = 0
  2468                           	opt	stack 25
  2469                           ;write_7seg@c stored from wreg
  2470                           	movwf	((c:write_7seg@c)),c
  2471  0002A0  6E19               	line	131
  2472                           	
  2473                           i2l867:
  2474  0002A2                     ;main_app.c: 131:     LATD = c;
  2475                           	movff	(c:write_7seg@c),(c:3980)	;volatile
  2476  0002A2  C019  FF8C         	line	132
  2477                           	
  2478                           i2l104:
  2479  0002A6                     	return	;funcret
  2480  0002A6  0012               	opt stack 0
  2481                           GLOBAL	__end_of_write_7seg
  2482                           	__end_of_write_7seg:
  2483  0002A8                     	signat	_write_7seg,4217
  2484                           	GLOBAL	__activetblptr
  2485                           __activetblptr	EQU	0
  2486  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  2487                           	PSECT	rparam,class=COMRAM,space=1,noexec
  2488                           	GLOBAL	__Lrparam
  2489                           	FNCONF	rparam,??,?
  2490                           	GLOBAL	___rparam_used
  2491                           	___rparam_used EQU 1
  2492  0000                     	GLOBAL	___param_bank
  2493                           	___param_bank EQU 0
  2494  0000                     GLOBAL	__Lparam, __Hparam
  2495                           GLOBAL	__Lrparam, __Hrparam
  2496                           __Lparam	EQU	__Lrparam
  2497  0000                     __Hparam	EQU	__Hrparam
  2498  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  2499                           	global	btemp
  2500                           btemp:
  2501  00001C                     	ds	1
  2502  00001C                     	global	int$flags
  2503                           	int$flags	set btemp
  2504  0000                     	global	wtemp8
  2505                           	wtemp8 set btemp+1
  2506  0000                     	global	ttemp5
  2507                           	ttemp5 set btemp+1
  2508  0000                     	global	ttemp6
  2509                           	ttemp6 set btemp+4
  2510  0000                     	global	ttemp7
  2511                           	ttemp7 set btemp+8
  2512  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3      27
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _f_touch->_set_LED_ready
    _d_touch->_set_LED_ready
    _c_touch->_get_adc_value
    _c_touch->_send_volt_value

Critical Paths under _Serial_interrupt in COMRAM

    _Serial_interrupt->_check
    _check->_write_7seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _Serial_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Serial_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Serial_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Serial_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Serial_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Serial_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Serial_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Serial_interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                            _c_touch
                            _d_touch
                            _f_touch
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                         _inite_UART
 ---------------------------------------------------------------------------------
 (2) _inite_UART                                           0     0      0       0
                         _SetupClock
 ---------------------------------------------------------------------------------
 (3) _SetupClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _f_touch                                              0     0      0      15
                           _closeADC
                      _set_LED_ready
 ---------------------------------------------------------------------------------
 (2) _closeADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _d_touch                                              0     0      0      15
                       _configureADC
                      _set_LED_ready
 ---------------------------------------------------------------------------------
 (2) _set_LED_ready                                        1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _c_touch                                              0     0      0      30
                      _get_adc_value
                    _send_volt_value
 ---------------------------------------------------------------------------------
 (2) _send_volt_value                                      1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_adc_value                                        1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Serial_interrupt                                     0     0      0      60
                              _check
 ---------------------------------------------------------------------------------
 (5) _check                                                1     1      0      60
                                              1 COMRAM     1     1      0
                         _write_7seg
 ---------------------------------------------------------------------------------
 (6) _write_7seg                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _c_touch
     _get_adc_value
     _send_volt_value
   _d_touch
     _configureADC
     _set_LED_ready
   _f_touch
     _closeADC
     _set_LED_ready
   _init
     _inite_UART
       _SetupClock

 _Serial_interrupt (ROOT)
   _check
     _write_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3      1B       1       28.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3      20        0.0%
DATA                 0      0      E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 09 15:44:56 2019

            ?_configureADC 0019                          _i 0011                         l80 01BC  
                       l77 029E                         u20 0216                         u21 0212  
                       u30 0236                         u31 0232                         u15 026E  
                       u16 0270                __CFG_BORV$3 000000      __end_of_set_LED_ready 0272  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l101 0252                        l110 02AA  
                      l113 0270                        l122 0228                        l123 0228  
                      l107 0200                        l131 028A                        l116 0208  
                      l124 023A                        l140 0140                        l117 0208  
                      l125 023E                        l141 011E                        l118 0216  
                      l134 027E                        l142 00FC                        l119 0220  
                      l143 011A                        l128 0296                        l144 0134  
                      l145 0144                        l146 0148                        l147 0148  
                      l139 00E2                        l823 0298                        l831 0196  
                      l841 01A2                        l833 019A                        l825 018E  
                      l851 01AC                        l843 01A4                        l835 019C  
                      l827 0192                        l931 0240                        l861 01B6  
                      l853 01AE                        l845 01A6                        l837 019E  
                      l829 0194                        l941 024E                        l933 0244  
                      l951 0272                        l871 01EA                        l943 028C  
                      l863 01B8                        l855 01B0                        l847 01A8  
                      l839 01A0                        l935 0248                        l881 0202  
                      l873 01EC                        l945 0290                        l865 01BA  
                      l857 01B2                        l849 01AA                        l937 024A  
                      l961 00C0                        l883 021A                        l875 01FE  
                      l947 0280                        l859 01B4                        l939 024C  
                      l971 00CA                        l963 00C2                        l885 0220  
                      l869 01E2                        l877 02A8                        l949 0284  
                      l981 00D4                        l973 00CC                        l965 00C4  
                      l957 00BA                        l887 0224                        l879 0266  
                      l991 00E2                        l983 00D6                        l975 00CE  
                      l967 00C6                        l959 00BE                        l889 023A  
                      l993 00F4                        l985 00D8                        l977 00D0  
                      l969 00C8                        l995 00FC                        l987 00DA  
                      l979 00D2                        l997 010E                        l989 00DC  
                      l999 0112               __CFG_CPB$OFF 000000                        u100 00F4  
                      u101 00F0                        u110 010E                        u111 010A  
                      u120 0130                        u121 012C               __CFG_CPD$OFF 000000  
             __CFG_BOR$OFF 000000                        _out 0014                        wreg 000FE8  
             __CFG_FOSC$HS 000000               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     l1001 011E                       l1003 0134                       l1005 0138  
                     _LATD 000F8C                       _RCIF 007CF5                       i2l90 00B8  
                     i2l83 0044                       i2l85 0034                       i2l86 00B8  
                     i2l87 0066                       i2l95 01C4                       i2l88 0088  
                     i2l96 01C4                       i2l89 00AE                       i2l97 01D2  
                     i2l98 01DE                       _TXIF 007CF4            ??_get_adc_value 001B  
                     _baud 0015                       _main 00BA                       _init 0240  
                     _temp 0017                       fsr1l 000FE1                       btemp 001C  
                     start 000E              __CFG_IESO$OFF 000000             ??_configureADC 001B  
            __CFG_MCLRE$ON 000000               ___param_bank 000000              __CFG_PLLDIV$5 000000  
           __CFG_CCP2MX$ON 000000                      ?_main 0019                      ?_init 0019  
                    _T0CON 000FD5             __CFG_DEBUG$OFF 000000                      i2l104 02A6  
                    i2l901 0044                      i2l911 0078                      i2l903 0056  
                    i2l921 00A0                      i2l913 007E                      i2l905 005C  
                    i2l923 00A6                      i2l915 0084                      i2l907 0062  
                    i2l925 00AA                      i2l917 0088                      i2l909 0066  
                    i2l919 009A                      i2l927 00AE                      i2l929 00B4  
                    i2l953 01C0                      i2l867 02A2                      i2l891 0014  
                    i2l955 01D6                      i2l893 0022                      i2l895 0034  
                    i2l897 003A                      i2l899 0040                      _RCREG 000FAE  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _SPBRG 000FAF  
            __CFG_USBDIV$1 000000                      _TXREG 000FAD              __CFG_PWRT$OFF 000000  
          __end_of_c_touch 0280              __CFG_WRT0$OFF 000000            __end_of_d_touch 0298  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000            __end_of_f_touch 028C  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
                    _check 0012             __CFG_EBTRB$OFF 000000                      _input 0010  
                    tablat 000FF5          ?_Serial_interrupt 0019                      ttemp5 001D  
                    ttemp6 0020                      ttemp7 0024                      status 000FD8  
                    wtemp8 001D             __CFG_ICPRT$OFF 000000         ??_Serial_interrupt 001B  
          __initialization 014C               __end_of_main 014C               __end_of_init 0254  
                   ??_main 001C                 _MsgFromPIC 0001                     ??_init 001B  
            __activetblptr 000000                     ?_check 0019                     _ADRESH 000FC4  
                   i2u4_40 0022                     i2u4_41 001E                     i2u5_40 0030  
                   i2u5_41 002C                     i2u6_40 0056                     i2u6_41 0052  
                   i2u7_40 0078                     i2u7_41 0074                     i2u8_40 009A  
                   i2u8_41 0096                     i2u9_40 01D2                     i2u9_41 01CE  
         __end_of_closeADC 02AC             __CFG_XINST$OFF 000000             __CFG_STVREN$ON 000000  
               _SetupClock 0298                     clear_0 0172                     clear_1 017E  
                ??_c_touch 001C                  ??_d_touch 001C                  ??_f_touch 001C  
             __pdataCOMRAM 0001                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8       __end_of_configureADC 0202              _MessageBuffer 0100  
               __accesstop 0060    __end_of__initialization 0184            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001   __size_of_send_volt_value 001E             __pcstackCOMRAM 0019  
            __end_of_check 00BA                    ??_check 001A                 __pbssBANK1 0100  
              ?_SetupClock 0019                  ?_closeADC 0019            __CFG_VREGEN$OFF 000000  
   __size_of_set_LED_ready 000E      __end_of_get_adc_value 0222                    __Hparam 0000  
               check@input 001A                    __Lparam 0000                 _inite_UART 018E  
        ??_send_volt_value 001B  __size_of_Serial_interrupt 01DA                    __pcinit 014C  
                  _c_touch 0272                    __ramtop 0800                    _d_touch 028C  
                  _f_touch 0280                    __ptext0 00BA                    __ptext1 0240  
                  __ptext2 018E                    __ptext3 0298                    __ptext4 0280  
                  __ptext5 02A8                    __ptext6 028C                    __ptext7 0264  
                  __ptext8 01E2                    __ptext9 0272                  _T0CONbits 000FD5  
    __size_of_configureADC 0020                 ??_closeADC 001B             __pintcode_body 01BE  
     end_of_initialization 0184        __size_of_SetupClock 0008                    int_func 01BE  
                _RCSTAbits 000FAB                    postdec1 000FE5               _configureADC 01E2  
                  postinc0 000FEE              _set_LED_ready 0264                  _PORTCbits 000F82  
                _PORTDbits 000F83                  _TRISCbits 000F94                  _TRISDbits 000F95  
                _TXSTAbits 000FAC                ?_inite_UART 0019                 _write_7seg 02A0  
              _BAUDCONbits 000FB8             ?_set_LED_ready 0019              __pidataCOMRAM 0254  
      start_initialization 014C               ??_SetupClock 001B           _Serial_interrupt 0008  
         __CFG_LPT1OSC$OFF 000000                __pbssCOMRAM 0011                  _adc_value 0018  
      __size_of_inite_UART 0030          __size_of_closeADC 0004         __end_of_SetupClock 02A0  
          _send_volt_value 0222                  __pintcode 0008            ??_set_LED_ready 001B  
              ?_write_7seg 0019                   ?_c_touch 0019                   ?_d_touch 0019  
                 ?_f_touch 0019         set_LED_ready@state 001B     send_volt_value@voltage 001B  
           __size_of_check 00A8                  _sec_input 000F                   _LATCbits 000F8B  
                 _PIE1bits 000F9D           __CFG_WDTPS$32768 000000                write_7seg@c 0019  
               _ADCON0bits 000FC2                 _ADCON1bits 000FC1                 _ADCON2bits 000FC0  
   __size_of_get_adc_value 0020    __end_of_send_volt_value 0240                  copy_data0 0160  
                _sys_state 0013        __size_of_write_7seg 0008                   __Hrparam 0000  
                 __Lrparam 0000               ??_inite_UART 001B           __size_of_c_touch 000E  
         __size_of_d_touch 000C           __size_of_f_touch 000C                   __ptext10 0222  
                 __ptext11 0202                   __ptext13 0012                   __ptext14 02A0  
                 _closeADC 02A8   __end_of_Serial_interrupt 01E2         __end_of_inite_UART 01BE  
            __size_of_main 0092              __size_of_init 0014              _get_adc_value 0202  
                 int$flags 001C                _UART1Config 0016          get_adc_value@digi 001B  
    __CFG_CPUDIV$OSC2_PLL3 000000                 _INTCONbits 000FF2           ?_send_volt_value 0019  
                 intlevel2 0000             ?_get_adc_value 0019                 _OSCCONbits 000FD3  
             ??_write_7seg 0019         __end_of_write_7seg 02A8  
